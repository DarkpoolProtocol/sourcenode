{"version":3,"sources":["meteor://💻app/imports/api/accounts/server/methods.js","meteor://💻app/imports/api/blocks/server/methods.js","meteor://💻app/imports/api/blocks/server/publications.js","meteor://💻app/imports/api/blocks/blocks.js","meteor://💻app/imports/api/chain/server/methods.js","meteor://💻app/imports/api/chain/server/publications.js","meteor://💻app/imports/api/chain/chain.js","meteor://💻app/imports/api/coin-stats/server/methods.js","meteor://💻app/imports/api/coin-stats/coin-stats.js","meteor://💻app/imports/api/delegations/server/methods.js","meteor://💻app/imports/api/delegations/delegations.js","meteor://💻app/imports/api/ledger/server/methods.js","meteor://💻app/imports/api/proposals/server/methods.js","meteor://💻app/imports/api/proposals/server/publications.js","meteor://💻app/imports/api/proposals/proposals.js","meteor://💻app/imports/api/records/server/methods.js","meteor://💻app/imports/api/records/server/publications.js","meteor://💻app/imports/api/records/records.js","meteor://💻app/imports/api/status/server/publications.js","meteor://💻app/imports/api/status/status.js","meteor://💻app/imports/api/transactions/server/methods.js","meteor://💻app/imports/api/transactions/server/publications.js","meteor://💻app/imports/api/transactions/transactions.js","meteor://💻app/imports/api/validators/server/methods.js","meteor://💻app/imports/api/validators/server/publications.js","meteor://💻app/imports/api/validators/validators.js","meteor://💻app/imports/api/voting-power/history.js","meteor://💻app/imports/api/evidences/evidences.js","meteor://💻app/imports/api/validator-sets/validator-sets.js","meteor://💻app/imports/startup/both/index.js","meteor://💻app/imports/startup/server/create-indexes.js","meteor://💻app/imports/startup/server/index.js","meteor://💻app/imports/startup/server/register-api.js","meteor://💻app/imports/startup/server/util.js","meteor://💻app/imports/ui/components/Icons.jsx","meteor://💻app/both/utils/coins.js","meteor://💻app/both/utils/erros.js","meteor://💻app/server/main.js"],"names":["Meteor","module","link","v","HTTP","Validators","fetchFromUrl","url","res","get","LCD","statusCode","e","console","log","methods","address","unblock","available","response","JSON","parse","content","result","account","type","value","BaseVestingAccount","BaseAccount","account_number","balance","delegations","unbonding","rewards","total_rewards","total","validator","findOne","$or","operator_address","delegator_address","val_commission","length","commission","data","shares","parseFloat","relegations","completionTime","forEach","relegation","entries","time","Date","completion_time","redelegationCompletionTime","undelegations","unbondingCompletionTime","delegation","i","unbondings","redelegations","redelegation","validator_dst_address","count","did_address","name","Promise","Blockscon","Chain","ValidatorSets","ValidatorRecords","Analytics","VPDistributions","VotingPowerHistory","Transactions","Evidences","sha256","getAddress","cheerio","getRemovedValidators","prevValidators","validators","p","splice","getValidatorProfileUrl","identity","them","pictures","primary","stringify","indexOf","teamPage","page","load","attr","blocks","find","proposerAddress","fetch","heights","map","block","height","blocksStats","$in","totalBlockDiff","b","timeDiff","collection","rawCollection","pipeline","$match","$sort","$limit","settings","public","uptimeWindow","$unwind","$group","$cond","$eq","await","aggregate","toArray","RPC","status","sync_info","latest_block_height","currHeight","sort","limit","startHeight","params","SYNCING","until","call","curr","validatorSet","consensus_pubkey","totalValidators","Object","keys","startBlockTime","analyticsData","bulkValidators","initializeUnorderedBulkOp","bulkValidatorRecords","bulkVPHistory","bulkTransations","startGetHeightTime","blockData","hash","block_id","transNum","txs","header","lastBlockHash","last_block_id","proposer_address","precommits","last_commit","signatures","push","validator_address","t","Buffer","from","err","evidence","insert","precommitsCount","endGetHeightTime","startGetValidatorsTime","block_height","parseInt","validatorsCount","startBlockInsertTime","endBlockInsertTime","existingValidators","$exists","record","exists","voting_power","j","numBlocks","uptime","base","upsert","updateOne","$set","lastSeen","chainStatus","chainId","chain_id","lastSyncedTime","blockTime","defaultBlockTime","dateLatest","dateLast","Math","abs","getTime","endGetValidatorsTime","update","averageBlockTime","startFindValidatorsNameTime","proposer_priority","valExist","pub_key","accpub","bech32PrefixAccPub","operator_pubkey","bech32PrefixValPub","bech32PrefixConsPub","validatorData","description","profile_url","jailed","min_self_delegation","tokens","delegator_shares","bond_height","bond_intra_tx_counter","unbonding_height","unbonding_time","self_delegation","prev_voting_power","block_time","selfDelegation","prevVotingPower","changeType","changeData","removedValidators","r","dbValidators","fields","conPubKey","undefined","profileUrl","endFindValidatorsNameTime","startAnayticsInsertTime","endAnalyticsInsertTime","startVUpTime","execute","endVUpTime","startVRTime","endVRTime","activeValidators","numTopTwenty","ceil","numBottomEighty","topTwentyPower","bottomEightyPower","numTopThirtyFour","numBottomSixtySix","topThirtyFourPercent","bottomSixtySixPercent","vpDist","numValidators","totalVotingPower","createAt","endBlockTime","lastBlocksSyncedTime","publishComposite","children","export","Mongo","Collection","helpers","proposer","sorted","ChainStates","Coin","default","findVotingPower","genValidators","power","consensus","round_state","round","step","votedPower","votes","prevotes_bit_array","split","votingHeight","votingRound","votingStep","prevotes","chain","node_info","network","latestBlockHeight","latestBlockTime","latest_block_time","latestState","activeVP","activeVotingPower","chainStates","bonding","bondedTokens","bonded_tokens","notBondedTokens","not_bonded_tokens","StakingCoin","denom","supply","totalSupply","pool","communityPool","amount","inflation","provisions","annualProvisions","created","readGenesis","debug","genesisFile","genesis","distr","app_state","distribution","chainParams","genesisTime","genesis_time","consensusParams","consensus_params","auth","bank","staking","mint","communityTax","community_tax","baseProposerReward","base_proposer_reward","bonusProposerReward","bonus_proposer_reward","withdrawAddrEnabled","withdraw_addr_enabled","gov","startingProposalId","depositParams","votingParams","tallyParams","slashing","crisis","starting_proposal_id","deposit_params","voting_params","tally_params","genutil","gentxs","msg","m","pubkey","floor","fraction","pubkeyValue","genValidatorsSet","CoinStats","publish","last_updated_at","coinId","coingeckoId","now","setMinutes","Delegations","concat","createdAt","_objectSpread","txInfo","timestamp","post","code","Error","raw_log","message","txhash","body","path","txMsg","adjustment","gas_estimate","Proposals","proposals","finishedProposalIds","Set","proposalId","proposalIds","bulkProposals","proposal","id","has","proposal_id","$nin","proposal_status","deposits","getVoteDetail","tally","updatedAt","voters","vote","voter","votingPowerMap","validatorAddressMap","moniker","delegatorShares","deductedShares","votingPower","check","Number","AverageData","AverageValidatorData","Status","MissedBlocksStats","MissedBlocks","_","BULKUPDATEMAXSIZE","getBlockStats","latestHeight","blockStats","cond","$and","$gt","$lte","options","assign","getPreviousRecord","voterAddress","previousRecord","blockHeight","lastUpdatedHeight","prevStats","pick","missCount","totalCount","COUNTMISSEDBLOCKS","startTime","explorerStatus","lastProcessedMissedBlockHeight","min","bulkMissedStats","initializeOrderedBulkOp","validatorsMap","proposerVoterStats","votedValidators","validatorSets","votedVotingPower","activeValidator","currentValidator","set","n","stats","client","_driver","mongo","bulkPromise","then","bindEnvironment","nInserted","nUpserted","nModified","lastProcessedMissedBlockTime","COUNTMISSEDBLOCKSSTATS","lastMissedBlockHeight","missedRecords","counts","existingRecord","lastMissedBlockTime","averageVotingPower","analytics","lastMinuteVotingPower","lastMinuteBlockTime","lastHourVotingPower","lastHourBlockTime","lastDayVotingPower","lastDayBlockTime","blockHeights","a","num","conditions","proposerMoniker","voterMoniker","AddressLength","toUpperCase","tx","txId","$lt","includes","bech32PrefixValAddr","bech32PrefixAccAddr","validatorAddress","delegatorAddress","query","TxIcon","direction","val","firstSeen","history","createIndex","unique","partialFilterExpression","onPageLoad","Helmet","sink","helmet","renderStatic","appendToHead","meta","toString","title","bech32","Future","Npm","require","exec","toHexString","byteArray","byte","slice","join","pubkeyToBech32","prefix","pubkeyAminoPrefix","buffer","alloc","copy","encode","toWords","bech32ToPubkey","fromWords","decode","words","getDelegator","operatorAddr","getKeybaseTeamPic","keybaseUrl","DenomSymbol","ProposalStatusIcon","VoteIcon","InfoIcon","React","UncontrolledTooltip","props","valid","Component","constructor","ref","createRef","render","tooltipText","numbro","autoformat","formatter","format","coinList","coins","coin","displayNamePlural","displayName","digitalMoney","nom","digit","unit","head","s","pow","replace","digitalCoin","symbol","String","bondDenom","lowerDenom","toLowerCase","_coin","_amount","stakingAmount","precision","minStake","repeat","mintString","stakeString","toHanString","MinStake","ErrorCheck","errors","codespace","payload","space","process","foundError","hasOwnProperty","GetMessage","gas_used","gas_wanted","remote","rpc","lcd","timerBlocks","timerChain","timerConsensus","timerProposal","timerProposalsResults","timerMissedBlock","timerDelegation","timerAggregate","DEFAULTSETTINGS","updateChainStatus","error","updateBlock","getConsensusState","getProposals","getProposalsResults","updateMissedBlocks","getDelegations","aggregateMinutely","aggregateHourly","aggregateDaily","startup","isDevelopment","DEFAULTSETTINGSJSON","env","NODE_TLS_REJECT_UNAUTHORIZED","key","warn","param","startTimer","setInterval","consensusInterval","blockInterval","statusInterval","proposalInterval","missedBlocksInterval","delegationInterval","getUTCSeconds","getUTCMinutes","getUTCHours"],"mappings":"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","file":"/app.js","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { HTTP } from 'meteor/http';\nimport { Validators } from '/imports/api/validators/validators.js';\n\nconst fetchFromUrl = (url) => {\n    try {\n        let res = HTTP.get (LCD + url);\n        if (res.statusCode == 200) {\n            return res\n        }\n    } catch (e) {\n        console.log (res);\n        console.log (e);\n    }\n}\n\nMeteor.methods ({\n    'accounts.getAccountDetail' : function (address) {\n        this.unblock ();\n        let url = LCD + '/auth/accounts/' + address;\n        try {\n            let available = HTTP.get (url);\n            if (available.statusCode == 200) {\n                let response = JSON.parse (available.content).result;\n                let account;\n                if (response.type === 'cosmos-sdk/Account')\n                    account = response.value;\n                else if (response.type === 'cosmos-sdk/DelayedVestingAccount' || response.type === 'cosmos-sdk/ContinuousVestingAccount')\n                    account = response.value.BaseVestingAccount.BaseAccount\n                if (account && account.account_number != null)\n                    return account\n                return null\n            }\n        } catch (e) {\n            console.log (url);\n            console.log (e)\n        }\n    },\n    'accounts.getBalance' : function (address) {\n        this.unblock ();\n        let balance = {}\n\n        // get available atoms\n        let url = LCD + '/bank/balances/' + address;\n        try {\n            let available = HTTP.get (url);\n            if (available.statusCode == 200) {\n                balance.available = JSON.parse (available.content).result;\n\n            }\n        } catch (e) {\n            console.log (url);\n            console.log (e)\n        }\n\n        // get delegated amnounts\n        url = LCD + '/staking/delegators/' + address + '/delegations';\n        try {\n            let delegations = HTTP.get (url);\n            if (delegations.statusCode == 200) {\n                balance.delegations = JSON.parse (delegations.content).result;\n            }\n        } catch (e) {\n            console.log (url);\n            console.log (e);\n        }\n        // get unbonding\n        url = LCD + '/staking/delegators/' + address + '/unbonding_delegations';\n        try {\n            let unbonding = HTTP.get (url);\n            if (unbonding.statusCode == 200) {\n                balance.unbonding = JSON.parse (unbonding.content).result;\n            }\n        } catch (e) {\n            console.log (url);\n            console.log (e);\n        }\n\n        // get rewards\n        url = LCD + '/distribution/delegators/' + address + '/rewards';\n        try {\n            let rewards = HTTP.get (url);\n            if (rewards.statusCode == 200) {\n                //get seperate rewards value\n                balance.rewards = JSON.parse (rewards.content).result.rewards;\n                //get total rewards value\n                balance.total_rewards = JSON.parse (rewards.content).result.total;\n\n            }\n        } catch (e) {\n            console.log (url);\n            console.log (e);\n        }\n\n        // get commission\n        let validator = Validators.findOne (\n            { $or : [{ operator_address : address }, { delegator_address : address }, { address : address }] })\n        if (validator) {\n            let url = LCD + '/distribution/validators/' + validator.operator_address;\n            balance.operator_address = validator.operator_address;\n            try {\n                let rewards = HTTP.get (url);\n                if (rewards.statusCode == 200) {\n                    let content = JSON.parse (rewards.content).result;\n                    if (content.val_commission && content.val_commission.length > 0)\n                        balance.commission = content.val_commission;\n\n                }\n\n            } catch (e) {\n                console.log (url);\n                console.log (e)\n            }\n        }\n\n        return balance;\n    },\n    'accounts.getDelegation' : function (address, validator) {\n        let url = `/staking/delegators/${address}/delegations/${validator}`;\n        let delegations = fetchFromUrl (url);\n        delegations = delegations && delegations.data.result;\n        if (delegations && delegations.shares)\n            delegations.shares = parseFloat (delegations.shares);\n\n        url = `/staking/redelegations?delegator=${address}&validator_to=${validator}`;\n        let relegations = fetchFromUrl (url);\n        relegations = relegations && relegations.data.result;\n        let completionTime;\n        if (relegations) {\n            relegations.forEach ((relegation) => {\n                let entries = relegation.entries\n                let time = new Date (entries[entries.length - 1].completion_time)\n                if (!completionTime || time > completionTime)\n                    completionTime = time\n            })\n            delegations.redelegationCompletionTime = completionTime;\n        }\n\n        url = `/staking/delegators/${address}/unbonding_delegations/${validator}`;\n        let undelegations = fetchFromUrl (url);\n        undelegations = undelegations && undelegations.data.result;\n        if (undelegations) {\n            delegations.unbonding = undelegations.entries.length;\n            delegations.unbondingCompletionTime = undelegations.entries[0].completion_time;\n        }\n        return delegations;\n    },\n    'accounts.getAllDelegations' : function (address) {\n        let url = LCD + '/staking/delegators/' + address + '/delegations';\n\n        try {\n            let delegations = HTTP.get (url);\n            if (delegations.statusCode == 200) {\n                delegations = JSON.parse (delegations.content).result;\n                if (delegations && delegations.length > 0) {\n                    delegations.forEach ((delegation, i) => {\n                        if (delegations[i] && delegations[i].shares)\n                            delegations[i].shares = parseFloat (delegations[i].shares);\n                    })\n                }\n\n                return delegations;\n            }\n\n        } catch (e) {\n            console.log (url);\n            console.log (e);\n        }\n    },\n    'accounts.getAllUnbondings' : function (address) {\n        let url = LCD + '/staking/delegators/' + address + '/unbonding_delegations';\n\n        try {\n            let unbondings = HTTP.get (url);\n            if (unbondings.statusCode == 200) {\n                unbondings = JSON.parse (unbondings.content).result;\n                return unbondings;\n            }\n\n        } catch (e) {\n            console.log (url);\n            console.log (e);\n        }\n    },\n    'accounts.getAllRedelegations' : function (address, validator) {\n        let url = `/staking/redelegations?delegator=${address}&validator_from=${validator}`;\n        let result = fetchFromUrl (url);\n        if (result && result.data) {\n            let redelegations = {}\n            result.data.forEach ((redelegation) => {\n                let entries = redelegation.entries;\n                redelegations[redelegation.validator_dst_address] = {\n                    count : entries.length,\n                    completionTime : entries[0].completion_time\n                }\n            })\n            return redelegations\n        }\n    },\n    'accounts.getDidToAddress' : function (did_address) {\n        let url = `/didToAddr/${did_address}`;\n        let result = fetchFromUrl (url);\n        return result\n    },\n    'accounts.getDidDoc' : function (did_address) {\n        let url = `/did/${did_address}`;\n        let result = fetchFromUrl (url);\n        return result\n    },\n    'accounts.allDid' : function () {\n        let url = `/allDidDocs/`;\n        let result = fetchFromUrl (url);\n        return result\n    },\n    'accounts.checkName' : function (name) {\n        let url = `/checkName/${name}`;\n        let result = fetchFromUrl (url);\n        return result\n    }\n\n\n})\n","import { Meteor } from 'meteor/meteor';\nimport { HTTP } from 'meteor/http';\nimport { Promise } from \"meteor/promise\";\nimport { Blockscon } from '/imports/api/blocks/blocks.js';\nimport { Chain } from '/imports/api/chain/chain.js';\nimport { ValidatorSets } from '/imports/api/validator-sets/validator-sets.js';\nimport { Validators } from '/imports/api/validators/validators.js';\nimport { ValidatorRecords, Analytics, VPDistributions} from '/imports/api/records/records.js';\nimport { VotingPowerHistory } from '/imports/api/voting-power/history.js';\nimport { Transactions } from '../../transactions/transactions.js';\nimport { Evidences } from '../../evidences/evidences.js';\nimport { sha256 } from 'js-sha256';\nimport { getAddress } from 'tendermint/lib/pubkey';\nimport * as cheerio from 'cheerio';\n\n// import Block from '../../../ui/components/Block';\n\n// getValidatorVotingPower = (validators, address) => {\n//     for (v in validators){\n//         if (validators[v].address == address){\n//             return parseInt(validators[v].voting_power);\n//         }\n//     }\n// }\n\ngetRemovedValidators = (prevValidators, validators) => {\n    // let removeValidators = [];\n    for (p in prevValidators){\n        for (v in validators){\n            if (prevValidators[p].address == validators[v].address){\n                prevValidators.splice(p,1);\n            }\n        }\n    }\n\n    return prevValidators;\n}\n\ngetValidatorProfileUrl = (identity) => {\n    if (identity.length == 16){\n        let response = HTTP.get(`https://keybase.io/_/api/1.0/user/lookup.json?key_suffix=${identity}&fields=pictures`)\n        if (response.statusCode == 200) {\n            let them = response.data.them\n            return them && them.length && them[0].pictures && them[0].pictures.primary && them[0].pictures.primary.url;\n        } else {\n            console.log(JSON.stringify(response))\n        }\n    } else if (identity.indexOf(\"keybase.io/team/\")>0){\n        let teamPage = HTTP.get(identity);\n        if (teamPage.statusCode == 200){\n            let page = cheerio.load(teamPage.content);\n            return page(\".kb-main-card img\").attr('src');\n        } else {\n            console.log(JSON.stringify(teamPage))\n        }\n    }\n}\n\n// var filtered = [1, 2, 3, 4, 5].filter(notContainedIn([1, 2, 3, 5]));\n// console.log(filtered); // [4]\n\nMeteor.methods({\n    'blocks.averageBlockTime'(address){\n        let blocks = Blockscon.find({proposerAddress:address}).fetch();\n        let heights = blocks.map((block, i) => {\n            return block.height;\n        });\n        let blocksStats = Analytics.find({height:{$in:heights}}).fetch();\n        // console.log(blocksStats);\n\n        let totalBlockDiff = 0;\n        for (b in blocksStats){\n            totalBlockDiff += blocksStats[b].timeDiff;\n        }\n        return totalBlockDiff/heights.length;\n    },\n    'blocks.findUpTime'(address){\n        let collection = ValidatorRecords.rawCollection();\n        // let aggregateQuery = Meteor.wrapAsync(collection.aggregate, collection);\n        var pipeline = [\n            {$match:{\"address\":address}},\n            // {$project:{address:1,height:1,exists:1}},\n            {$sort:{\"height\":-1}},\n            {$limit:(Meteor.settings.public.uptimeWindow-1)},\n            {$unwind: \"$_id\"},\n            {$group:{\n                \"_id\": \"$address\",\n                \"uptime\": {\n                    \"$sum\":{\n                        $cond: [{$eq: ['$exists', true]}, 1, 0]\n                    }\n                }\n            }\n            }];\n        // let result = aggregateQuery(pipeline, { cursor: {} });\n\n        return Promise.await(collection.aggregate(pipeline).toArray());\n        // return .aggregate()\n    },\n    'blocks.getLatestHeight': function() {\n        this.unblock();\n        let url = RPC+'/status';\n        try{\n            let response = HTTP.get(url);\n            let status = JSON.parse(response.content);\n            return (status.result.sync_info.latest_block_height);\n        }\n        catch (e){\n            return 0;\n        }\n    },\n    'blocks.getCurrentHeight': function() {\n        this.unblock();\n        let currHeight = Blockscon.find({},{sort:{height:-1},limit:1}).fetch();\n        // console.log(\"currentHeight:\"+currHeight);\n        let startHeight = Meteor.settings.params.startHeight;\n        if (currHeight && currHeight.length == 1) {\n            let height = currHeight[0].height;\n            if (height > startHeight)\n                return height\n        }\n        return startHeight\n    },\n    'blocks.blocksUpdate': function() {\n        if (SYNCING)\n            return \"Syncing...\";\n        else console.log(\"start to sync\");\n        // Meteor.clearInterval(Meteor.timerHandle);\n        // get the latest height\n        let until = Meteor.call('blocks.getLatestHeight');\n        // console.log(until);\n        // get the current height in db\n        let curr = Meteor.call('blocks.getCurrentHeight');\n        console.log(curr);\n        // loop if there's update in db\n        if (until > curr) {\n            SYNCING = true;\n\n            let validatorSet = {}\n            // get latest validator candidate information\n            url = LCD+'/staking/validators';\n\n            try{\n                response = HTTP.get(url);\n                JSON.parse(response.content).result.forEach((validator) => validatorSet[validator.consensus_pubkey] = validator);\n            }\n            catch(e){\n                console.log(e);\n            }\n\n            url = LCD+'/staking/validators?status=unbonding';\n\n            try{\n                response = HTTP.get(url);\n                JSON.parse(response.content).result.forEach((validator) => validatorSet[validator.consensus_pubkey] = validator)\n            }\n            catch(e){\n                console.log(e);\n            }\n\n            url = LCD+'/staking/validators?status=unbonded';\n\n            try{\n                response = HTTP.get(url);\n                JSON.parse(response.content).result.forEach((validator) => validatorSet[validator.consensus_pubkey] = validator)\n            }\n            catch(e){\n                console.log(e);\n            }\n            let totalValidators = Object.keys(validatorSet).length;\n            console.log(\"all validators: \"+ totalValidators);\n            for (let height = curr+1 ; height <= until ; height++) {\n                let startBlockTime = new Date();\n                // add timeout here? and outside this loop (for catched up and keep fetching)?\n                this.unblock();\n                let url = RPC+'/block?height=' + height;\n                let analyticsData = {};\n\n                console.log(url);\n                try{\n                    const bulkValidators = Validators.rawCollection().initializeUnorderedBulkOp();\n                    const bulkValidatorRecords = ValidatorRecords.rawCollection().initializeUnorderedBulkOp();\n                    const bulkVPHistory = VotingPowerHistory.rawCollection().initializeUnorderedBulkOp();\n                    const bulkTransations = Transactions.rawCollection().initializeUnorderedBulkOp();\n\n                    let startGetHeightTime = new Date();\n                    let response = HTTP.get(url);\n                    if (response.statusCode == 200){\n                        let block = JSON.parse(response.content);\n                        block = block.result;\n                        // store height, hash, numtransaction and time in db\n                        let blockData = {};\n                        blockData.height = height;\n                        blockData.hash = block.block_id.hash;\n                        blockData.transNum = block.block.data.txs?block.block.data.txs.length:0;\n                        blockData.time = new Date(block.block.header.time);\n                        blockData.lastBlockHash = block.block.header.last_block_id.hash;\n                        blockData.proposerAddress = block.block.header.proposer_address;\n                        blockData.validators = [];\n\n                        // Tendermint v0.33 start using \"signatures\" in last block instead of \"precommits\"\n\n                        let precommits = block.block.last_commit.signatures;\n                        if (precommits != null){\n                            // console.log(precommits.length);\n                            for (let i=0; i<precommits.length; i++){\n                                if (precommits[i] != null){\n                                    blockData.validators.push(precommits[i].validator_address);\n                                }\n                            }\n\n                            analyticsData.precommits = precommits.length;\n                            // record for analytics\n                            // PrecommitRecords.insert({height:height, precommits:precommits.length});\n                        }\n\n                        // save txs in database\n                        if (block.block.data.txs && block.block.data.txs.length > 0){\n                            for (t in block.block.data.txs){\n                                Meteor.call('Transactions.index', sha256(Buffer.from(block.block.data.txs[t], 'base64')), blockData.time, (err, result) => {\n                                    if (err){\n                                        console.log(err);\n                                    }\n                                });\n                            }\n                        }\n\n                        // save double sign evidences\n                        if (block.block.evidence.evidence){\n                            Evidences.insert({\n                                height: height,\n                                evidence: block.block.evidence.evidence\n                            });\n                        }\n\n                        blockData.precommitsCount = blockData.validators.length;\n\n                        analyticsData.height = height;\n\n                        let endGetHeightTime = new Date();\n                        console.log(\"Get height time: \"+((endGetHeightTime-startGetHeightTime)/1000)+\"seconds.\");\n\n\n                        let startGetValidatorsTime = new Date();\n                        // update chain status\n                        //url = RPC+'/validators?height='+height;\n                        url = RPC+`/validators?height=${height}&page=1&per_page=100`;\n                        response = HTTP.get(url);\n                        console.log(url);\n                        let validators = JSON.parse(response.content);\n                        validators.result.block_height = parseInt(validators.result.block_height);\n                        ValidatorSets.insert(validators.result);\n\n                        blockData.validatorsCount = validators.result.validators.length;\n                        let startBlockInsertTime = new Date();\n                        Blockscon.insert(blockData);\n                        let endBlockInsertTime = new Date();\n                        console.log(\"Block insert time: \"+((endBlockInsertTime-startBlockInsertTime)/1000)+\"seconds.\");\n\n                        // store valdiators exist records\n                        let existingValidators = Validators.find({address:{$exists:true}}).fetch();\n\n                        if (height > 1){\n                            // record precommits and calculate uptime\n                            // only record from block 2\n                            for (i in validators.result.validators){\n                                let address = validators.result.validators[i].address;\n                                let record = {\n                                    height: height,\n                                    address: address,\n                                    exists: false,\n                                    voting_power: parseInt(validators.result.validators[i].voting_power)//getValidatorVotingPower(existingValidators, address)\n                                }\n\n                                for (j in precommits){\n                                    if (precommits[j] != null){\n                                        if (address == precommits[j].validator_address){\n                                            record.exists = true;\n                                            precommits.splice(j,1);\n                                            break;\n                                        }\n                                    }\n                                }\n\n                                // calculate the uptime based on the records stored in previous blocks\n                                // only do this every 15 blocks ~\n\n                                if ((height % 15) == 0){\n                                    // let startAggTime = new Date();\n                                    let numBlocks = Meteor.call('blocks.findUpTime', address);\n                                    let uptime = 0;\n                                    // let endAggTime = new Date();\n                                    // console.log(\"Get aggregated uptime for \"+existingValidators[i].address+\": \"+((endAggTime-startAggTime)/1000)+\"seconds.\");\n                                    if ((numBlocks[0] != null) && (numBlocks[0].uptime != null)){\n                                        uptime = numBlocks[0].uptime;\n                                    }\n\n                                    let base = Meteor.settings.public.uptimeWindow;\n                                    if (height < base){\n                                        base = height;\n                                    }\n\n                                    if (record.exists){\n                                        if (uptime < base){\n                                            uptime++;\n                                        }\n                                        uptime = (uptime / base)*100;\n                                        bulkValidators.find({address:address}).upsert().updateOne({$set:{uptime:uptime, lastSeen:blockData.time}});\n                                    }\n                                    else{\n                                        uptime = (uptime / base)*100;\n                                        bulkValidators.find({address:address}).upsert().updateOne({$set:{uptime:uptime}});\n                                    }\n                                }\n\n                                bulkValidatorRecords.insert(record);\n                                // ValidatorRecords.update({height:height,address:record.address},record);\n                            }\n                        }\n\n                        let chainStatus = Chain.findOne({chainId:block.block.header.chain_id});\n                        let lastSyncedTime = chainStatus?chainStatus.lastSyncedTime:0;\n                        let timeDiff;\n                        let blockTime = Meteor.settings.params.defaultBlockTime;\n                        if (lastSyncedTime){\n                            let dateLatest = blockData.time;\n                            let dateLast = new Date(lastSyncedTime);\n                            timeDiff = Math.abs(dateLatest.getTime() - dateLast.getTime());\n                            blockTime = (chainStatus.blockTime * (blockData.height - 1) + timeDiff) / blockData.height;\n                        }\n\n                        let endGetValidatorsTime = new Date();\n                        console.log(\"Get height validators time: \"+((endGetValidatorsTime-startGetValidatorsTime)/1000)+\"seconds.\");\n\n                        Chain.update({chainId:block.block.header.chain_id}, {$set:{lastSyncedTime:blockData.time, blockTime:blockTime}});\n\n                        analyticsData.averageBlockTime = blockTime;\n                        analyticsData.timeDiff = timeDiff;\n\n                        analyticsData.time = blockData.time;\n\n                        // initialize validator data at first block\n                        // if (height == 1){\n                        //     Validators.remove({});\n                        // }\n\n                        analyticsData.voting_power = 0;\n\n                        let startFindValidatorsNameTime = new Date();\n                        if (validators.result){\n                            // validators are all the validators in the current height\n                            console.log(\"validatorSet size: \"+validators.result.validators.length);\n                            for (v in validators.result.validators){\n                                // Validators.insert(validators.result.validators[v]);\n                                let validator = validators.result.validators[v];\n                                validator.voting_power = parseInt(validator.voting_power);\n                                validator.proposer_priority = parseInt(validator.proposer_priority);\n\n                                let valExist = Validators.findOne({\"pub_key.value\":validator.pub_key.value});\n                                if (!valExist){\n                                    console.log(`validator pub_key ${validator.address} ${validator.pub_key.value} not in db`);\n                                    // let command = Meteor.settings.bin.gaiadebug+\" pubkey \"+validator.pub_key.value;\n                                    // console.log(command);\n                                    // let tempVal = validator;\n\n                                    validator.address = getAddress(validator.pub_key);\n                                    validator.accpub = Meteor.call('pubkeyToBech32', validator.pub_key, Meteor.settings.public.bech32PrefixAccPub);\n                                    validator.operator_pubkey = Meteor.call('pubkeyToBech32', validator.pub_key, Meteor.settings.public.bech32PrefixValPub);\n                                    validator.consensus_pubkey = Meteor.call('pubkeyToBech32', validator.pub_key, Meteor.settings.public.bech32PrefixConsPub);\n\n                                    let validatorData = validatorSet[validator.consensus_pubkey]\n                                    if (validatorData){\n                                        if (validatorData.description.identity)\n                                            validator.profile_url =  getValidatorProfileUrl(validatorData.description.identity)\n                                        validator.operator_address = validatorData.operator_address;\n                                        validator.delegator_address = Meteor.call('getDelegator', validatorData.operator_address);\n                                        validator.jailed = validatorData.jailed;\n                                        validator.status = validatorData.status;\n                                        validator.min_self_delegation = validatorData.min_self_delegation;\n                                        validator.tokens = validatorData.tokens;\n                                        validator.delegator_shares = validatorData.delegator_shares;\n                                        validator.description = validatorData.description;\n                                        validator.bond_height = validatorData.bond_height;\n                                        validator.bond_intra_tx_counter = validatorData.bond_intra_tx_counter;\n                                        validator.unbonding_height = validatorData.unbonding_height;\n                                        validator.unbonding_time = validatorData.unbonding_time;\n                                        validator.commission = validatorData.commission;\n                                        validator.self_delegation = validator.delegator_shares;\n                                        // validator.removed = false,\n                                        // validator.removedAt = 0\n                                        // validatorSet.splice(val, 1);\n                                    } else {\n                                        console.log('no con pub key?')\n                                    }\n\n                                    // bulkValidators.insert(validator);\n                                    bulkValidators.find({address: validator.address}).upsert().updateOne({$set:validator});\n                                    // console.log(\"validator first appears: \"+bulkValidators.length);\n                                    bulkVPHistory.insert({\n                                        address: validator.address,\n                                        prev_voting_power: 0,\n                                        voting_power: validator.voting_power,\n                                        type: 'add',\n                                        height: blockData.height,\n                                        block_time: blockData.time\n                                    });\n\n                                    // Meteor.call('runCode', command, function(error, result){\n                                    // validator.address = result.match(/\\s[0-9A-F]{40}$/igm);\n                                    // validator.address = validator.address[0].trim();\n                                    // validator.hex = result.match(/\\s[0-9A-F]{64}$/igm);\n                                    // validator.hex = validator.hex[0].trim();\n                                    // validator.cosmosaccpub = result.match(/dx0pub.*$/igm);\n                                    // validator.cosmosaccpub = validator.dx0accpub[0].trim();\n                                    // validator.operator_pubkey = result.match(/dx0valoperpub.*$/igm);\n                                    // validator.operator_pubkey = validator.operator_pubkey[0].trim();\n                                    // validator.consensus_pubkey = result.match(/dx0svalconspub.*$/igm);\n                                    // validator.consensus_pubkey = validator.consensus_pubkey[0].trim();\n                                    // });\n                                }\n                                else{\n                                    let validatorData = validatorSet[valExist.consensus_pubkey]\n                                    if (validatorData){\n                                        if (validatorData.description && (!valExist.description || validatorData.description.identity !== valExist.description.identity))\n                                            validator.profile_url =  getValidatorProfileUrl(validatorData.description.identity)\n                                        validator.jailed = validatorData.jailed;\n                                        validator.status = validatorData.status;\n                                        validator.tokens = validatorData.tokens;\n                                        validator.delegator_shares = validatorData.delegator_shares;\n                                        validator.description = validatorData.description;\n                                        validator.bond_height = validatorData.bond_height;\n                                        validator.bond_intra_tx_counter = validatorData.bond_intra_tx_counter;\n                                        validator.unbonding_height = validatorData.unbonding_height;\n                                        validator.unbonding_time = validatorData.unbonding_time;\n                                        validator.commission = validatorData.commission;\n\n                                        // calculate self delegation percentage every 30 blocks\n\n                                        if (height % 30 == 1){\n                                            try{\n                                                let response = HTTP.get(LCD + '/staking/delegators/'+valExist.delegator_address+'/delegations/'+valExist.operator_address);\n\n                                                if (response.statusCode == 200){\n                                                    let selfDelegation = JSON.parse(response.content).result;\n                                                    if (selfDelegation.shares){\n                                                        validator.self_delegation = parseFloat(selfDelegation.shares)/parseFloat(validator.delegator_shares);\n                                                    }\n                                                }\n                                            }\n                                            catch(e){\n                                                // console.log(e);\n                                            }\n                                        }\n\n                                        bulkValidators.find({consensus_pubkey: valExist.consensus_pubkey}).updateOne({$set:validator});\n                                        // console.log(\"validator exisits: \"+bulkValidators.length);\n                                        // validatorSet.splice(val, 1);\n                                    }  else {\n                                        console.log('no con pub key?')\n                                    }\n                                    let prevVotingPower = VotingPowerHistory.findOne({address:validator.address}, {height:-1, limit:1});\n\n                                    if (prevVotingPower){\n                                        if (prevVotingPower.voting_power != validator.voting_power){\n                                            let changeType = (prevVotingPower.voting_power > validator.voting_power)?'down':'up';\n                                            let changeData = {\n                                                address: validator.address,\n                                                prev_voting_power: prevVotingPower.voting_power,\n                                                voting_power: validator.voting_power,\n                                                type: changeType,\n                                                height: blockData.height,\n                                                block_time: blockData.time\n                                            };\n                                            // console.log('voting power changed.');\n                                            // console.log(changeData);\n                                            bulkVPHistory.insert(changeData);\n                                        }\n                                    }\n\n                                }\n\n\n                                // console.log(validator);\n\n                                analyticsData.voting_power += validator.voting_power;\n                            }\n\n                            // if there is validator removed\n\n                            let prevValidators = ValidatorSets.findOne({block_height:height-1});\n\n                            if (prevValidators){\n                                let removedValidators = getRemovedValidators(prevValidators.validators, validators.result.validators);\n\n                                for (r in removedValidators){\n                                    bulkVPHistory.insert({\n                                        address: removedValidators[r].address,\n                                        prev_voting_power: removedValidators[r].voting_power,\n                                        voting_power: 0,\n                                        type: 'remove',\n                                        height: blockData.height,\n                                        block_time: blockData.time\n                                    });\n                                }\n                            }\n\n                        }\n\n\n                        // check if there's any validator not in db 14400 blocks(~1 day)\n                        if (height % 14400 == 0){\n                            try {\n                                console.log('Checking all validators against db...')\n                                let dbValidators = {}\n                                Validators.find({}, {fields: {consensus_pubkey: 1, status: 1}}\n                                ).forEach((v) => dbValidators[v.consensus_pubkey] = v.status)\n                                Object.keys(validatorSet).forEach((conPubKey) => {\n                                    let validatorData = validatorSet[conPubKey];\n                                    // Active validators should have been updated in previous steps\n                                    if (validatorData.status === 2)\n                                        return\n\n                                    if (dbValidators[conPubKey] == undefined) {\n                                        console.log(`validator with consensus_pubkey ${conPubKey} not in db`);\n\n                                        validatorData.pub_key = {\n                                            \"type\" : \"tendermint/PubKeyEd25519\",\n                                            \"value\": Meteor.call('bech32ToPubkey', conPubKey)\n                                        }\n                                        validatorData.address = getAddress(validatorData.pub_key);\n                                        validatorData.delegator_address = Meteor.call('getDelegator', validatorData.operator_address);\n\n                                        validatorData.accpub = Meteor.call('pubkeyToBech32', validatorData.pub_key, Meteor.settings.public.bech32PrefixAccPub);\n                                        validatorData.operator_pubkey = Meteor.call('pubkeyToBech32', validatorData.pub_key, Meteor.settings.public.bech32PrefixValPub);\n                                        console.log(JSON.stringify(validatorData))\n                                        bulkValidators.find({consensus_pubkey: conPubKey}).upsert().updateOne({$set:validatorData});\n                                    } else if (dbValidators[conPubKey] == 2) {\n                                        bulkValidators.find({consensus_pubkey: conPubKey}).upsert().updateOne({$set:validatorData});\n                                    }\n                                })\n                            } catch (e){\n                                console.log(e)\n                            }\n                        }\n\n                        // fetching keybase every 14400 blocks(~1 day)\n                        if (height % 14400 == 1){\n                            console.log('Fetching keybase...')\n                            Validators.find({}).forEach((validator) => {\n                                try {\n                                    let profileUrl =  getValidatorProfileUrl(validator.description.identity)\n                                    if (profileUrl) {\n                                        bulkValidators.find({address: validator.address}\n                                        ).upsert().updateOne({$set:{'profile_url':profileUrl}});\n                                    }\n                                } catch (e) {\n                                    console.log(profileUrl);\n                                    console.log(e)\n                                }\n                            })\n                        }\n\n                        let endFindValidatorsNameTime = new Date();\n                        console.log(\"Get validators name time: \"+((endFindValidatorsNameTime-startFindValidatorsNameTime)/1000)+\"seconds.\");\n\n                        // record for analytics\n                        let startAnayticsInsertTime = new Date();\n                        Analytics.insert(analyticsData);\n                        let endAnalyticsInsertTime = new Date();\n                        console.log(\"Analytics insert time: \"+((endAnalyticsInsertTime-startAnayticsInsertTime)/1000)+\"seconds.\");\n\n                        let startVUpTime = new Date();\n                        if (bulkValidators.length > 0){\n                            // console.log(bulkValidators.length);\n                            bulkValidators.execute((err, result) => {\n                                if (err){\n                                    console.log(err);\n                                }\n                                if (result){\n                                    // console.log(result);\n                                }\n                            });\n                        }\n\n                        let endVUpTime = new Date();\n                        console.log(\"Validator update time: \"+((endVUpTime-startVUpTime)/1000)+\"seconds.\");\n\n                        let startVRTime = new Date();\n                        if (bulkValidatorRecords.length > 0){\n                            bulkValidatorRecords.execute((err, result) => {\n                                if (err){\n                                    console.log(err);\n                                }\n                            });\n                        }\n\n                        let endVRTime = new Date();\n                        console.log(\"Validator records update time: \"+((endVRTime-startVRTime)/1000)+\"seconds.\");\n\n                        if (bulkVPHistory.length > 0){\n                            bulkVPHistory.execute((err, result) => {\n                                if (err){\n                                    console.log(err);\n                                }\n                            });\n                        }\n\n                        if (bulkTransations.length > 0){\n                            bulkTransations.execute((err, result) => {\n                                if (err){\n                                    console.log(err);\n                                }\n                            });\n                        }\n\n                        // calculate voting power distribution every 60 blocks ~ 5mins\n\n                        if (height % 60 == 1){\n                            console.log(\"===== calculate voting power distribution =====\");\n                            let activeValidators = Validators.find({status:2,jailed:false},{sort:{voting_power:-1}}).fetch();\n                            let numTopTwenty = Math.ceil(activeValidators.length*0.2);\n                            let numBottomEighty = activeValidators.length - numTopTwenty;\n\n                            let topTwentyPower = 0;\n                            let bottomEightyPower = 0;\n\n                            let numTopThirtyFour = 0;\n                            let numBottomSixtySix = 0;\n                            let topThirtyFourPercent = 0;\n                            let bottomSixtySixPercent = 0;\n\n\n\n                            for (v in activeValidators){\n                                if (v < numTopTwenty){\n                                    topTwentyPower += activeValidators[v].voting_power;\n                                }\n                                else{\n                                    bottomEightyPower += activeValidators[v].voting_power;\n                                }\n\n\n                                if (topThirtyFourPercent < 0.34){\n                                    topThirtyFourPercent += activeValidators[v].voting_power / analyticsData.voting_power;\n                                    numTopThirtyFour++;\n                                }\n                            }\n\n                            bottomSixtySixPercent = 1 - topThirtyFourPercent;\n                            numBottomSixtySix = activeValidators.length - numTopThirtyFour;\n\n                            let vpDist = {\n                                height: height,\n                                numTopTwenty: numTopTwenty,\n                                topTwentyPower: topTwentyPower,\n                                numBottomEighty: numBottomEighty,\n                                bottomEightyPower: bottomEightyPower,\n                                numTopThirtyFour: numTopThirtyFour,\n                                topThirtyFourPercent: topThirtyFourPercent,\n                                numBottomSixtySix: numBottomSixtySix,\n                                bottomSixtySixPercent: bottomSixtySixPercent,\n                                numValidators: activeValidators.length,\n                                totalVotingPower: analyticsData.voting_power,\n                                blockTime: blockData.time,\n                                createAt: new Date()\n                            }\n\n                            console.log(vpDist);\n\n                            VPDistributions.insert(vpDist);\n                        }\n                    }\n                }\n                catch (e){\n                    console.log(e);\n                    SYNCING = false;\n                    return \"Stopped\";\n                }\n                let endBlockTime = new Date();\n                console.log(\"This block used: \"+((endBlockTime-startBlockTime)/1000)+\"seconds.\");\n            }\n            SYNCING = false;\n            Chain.update({chainId:Meteor.settings.public.chainId}, {$set:{lastBlocksSyncedTime:new Date(), totalValidators:totalValidators}});\n        }\n\n        return until;\n    },\n    'addLimit': function(limit) {\n        // console.log(limit+10)\n        return (limit+10);\n    },\n    'hasMore': function(limit) {\n        if (limit > Meteor.call('getCurrentHeight')) {\n            return (false);\n        } else {\n            return (true);\n        }\n    }\n});\n","import { Meteor } from 'meteor/meteor';\nimport { Blockscon } from '../blocks.js';\nimport { Validators } from '../../validators/validators.js';\nimport { Transactions } from '../../transactions/transactions.js';\n\npublishComposite('blocks.height', function(limit){\n    return {\n        find(){\n            return Blockscon.find({}, {limit: limit, sort: {height: -1}})\n        },\n        children: [\n            {\n                find(block){\n                    return Validators.find(\n                        {address:block.proposerAddress},\n                        {limit:1}\n                    )\n                }\n            }\n        ]\n    }\n});\n\npublishComposite('blocks.findOne', function(height){\n    return {\n        find(){\n            return Blockscon.find({height:height})\n        },\n        children: [\n            {\n                find(block){\n                    return Transactions.find(\n                        {height:block.height}\n                    )\n                }\n            },\n            {\n                find(block){\n                    return Validators.find(\n                        {address:block.proposerAddress},\n                        {limit:1}\n                    )\n                }\n            }\n        ]\n    }\n});\n","import { Mongo } from 'meteor/mongo';\nimport { Validators } from '../validators/validators.js';\n\nexport const Blockscon = new Mongo.Collection ('blocks');\n\nBlockscon.helpers ({\n    proposer () {\n        return Validators.findOne ({ address : this.proposerAddress });\n    },\n    sorted (limit) {\n        return Blockscon.find ({}, { sort : { height : -1 }, limit : limit });\n    }\n});\n\n// Blockscon.helpers({\n//     sorted(limit) {\n//         return Blockscon.find({}, {sort: {height:-1}, limit: limit});\n//     }\n// });\n\n\n// Meteor.setInterval(function() {\n//     Meteor.call('blocksUpdate', (error, result) => {\n//         console.log(result);\n//     })\n// }, 30000000);\n","import { Meteor } from 'meteor/meteor';\nimport { HTTP } from 'meteor/http';\nimport { getAddress } from 'tendermint/lib/pubkey.js';\nimport { Chain, ChainStates } from '../chain.js';\nimport { Validators } from '../../validators/validators.js';\nimport { VotingPowerHistory } from '../../voting-power/history.js';\nimport Coin from '../../../../both/utils/coins.js';\n\nfindVotingPower = (validator, genValidators) => {\n    for (let v in genValidators){\n        if (validator.pub_key.value == genValidators[v].pub_key.value){\n            return parseInt(genValidators[v].power);\n        }\n    }\n}\n\nMeteor.methods({\n    'chain.getConsensusState': function(){\n        this.unblock();\n        let url = RPC+'/dump_consensus_state';\n        try{\n            let response = HTTP.get(url);\n            let consensus = JSON.parse(response.content);\n            consensus = consensus.result;\n            let height = consensus.round_state.height;\n            let round = consensus.round_state.round;\n            let step = consensus.round_state.step;\n            let votedPower = Math.round(parseFloat(consensus.round_state.votes[round].prevotes_bit_array.split(\" \")[3])*100);\n\n            Chain.update({chainId:Meteor.settings.public.chainId}, {$set:{\n                    votingHeight: height,\n                    votingRound: round,\n                    votingStep: step,\n                    votedPower: votedPower,\n                    proposerAddress: consensus.round_state.validators.proposer.address,\n                    prevotes: consensus.round_state.votes[round].prevotes,\n                    precommits: consensus.round_state.votes[round].precommits\n                }});\n        }\n        catch(e){\n            console.log(url);\n            console.log(e);\n        }\n    },\n    'chain.updateStatus': function(){\n        this.unblock();\n        let url = RPC+'/status';\n        try{\n            let response = HTTP.get(url);\n            let status = JSON.parse(response.content);\n            status = status.result;\n            let chain = {};\n            chain.chainId = status.node_info.network;\n            chain.latestBlockHeight = status.sync_info.latest_block_height;\n            chain.latestBlockTime = status.sync_info.latest_block_time;\n\n            let latestState = ChainStates.findOne({}, {sort: {height: -1}})\n            if (latestState && latestState.height >= chain.latestBlockHeight) {\n                return `no updates (getting block ${chain.latestBlockHeight} at block ${latestState.height})`\n            }\n\n            // Since Tendermint v0.33, validator page default set to return 30 validators.\n            // Query latest height with page 1 and 100 validators per page.\n            url = RPC+`/validators?height=${chain.latestBlockHeight}&page=1&per_page=100`;\n            response = HTTP.get(url);\n            let validators = JSON.parse(response.content);\n            validators = validators.result.validators;\n            chain.validators = validators.length;\n            let activeVP = 0;\n            for (v in validators){\n                activeVP += parseInt(validators[v].voting_power);\n            }\n            chain.activeVotingPower = activeVP;\n\n\n            Chain.update({chainId:chain.chainId}, {$set:chain}, {upsert: true});\n            // Get chain states\n            if (parseInt(chain.latestBlockHeight) > 0){\n                let chainStates = {};\n                chainStates.height = parseInt(status.sync_info.latest_block_height);\n                chainStates.time = new Date(status.sync_info.latest_block_time);\n\n                url = LCD + '/staking/pool';\n                try{\n                    response = HTTP.get(url);\n                    let bonding = JSON.parse(response.content).result;\n                    // chain.bondedTokens = bonding.bonded_tokens;\n                    // chain.notBondedTokens = bonding.not_bonded_tokens;\n                    chainStates.bondedTokens = parseInt(bonding.bonded_tokens);\n                    chainStates.notBondedTokens = parseInt(bonding.not_bonded_tokens);\n                }\n                catch(e){\n                    console.log(url);\n                    console.log(e);\n                }\n\n                if ( Coin.StakingCoin.denom ) {\n                    url = LCD + '/supply/total/'+ Coin.StakingCoin.denom;\n                    try{\n                        response = HTTP.get(url);\n                        let supply = JSON.parse(response.content).result;\n                        chainStates.totalSupply = parseInt(supply);\n                    }\n                    catch(e){\n                        console.log(url);\n                        console.log(e);\n                    }\n\n                    url = LCD + '/distribution/community_pool';\n                    try {\n                        response = HTTP.get(url);\n                        let pool = JSON.parse(response.content).result;\n                        if (pool && pool.length > 0){\n                            chainStates.communityPool = [];\n                            pool.forEach((amount, i) => {\n                                chainStates.communityPool.push({\n                                    denom: amount.denom,\n                                    amount: parseFloat(amount.amount)\n                                })\n                            })\n                        }\n                    }\n                    catch (e){\n                        console.log(url);\n                        console.log(e)\n                    }\n\n                    url = LCD + '/minting/inflation';\n                    try{\n                        response = HTTP.get(url);\n                        let inflation = JSON.parse(response.content).result;\n                        if (inflation){\n                            chainStates.inflation = parseFloat(inflation)\n                        }\n                    }\n                    catch(e){\n                        console.log(url);\n                        console.log(e);\n                    }\n\n                    url = LCD + '/minting/annual-provisions';\n                    try{\n                        response = HTTP.get(url);\n                        let provisions = JSON.parse(response.content);\n                        if (provisions){\n                            chainStates.annualProvisions = parseFloat(provisions.result)\n                        }\n                    }\n                    catch(e){\n                        console.log(url);\n                        console.log(e);\n                    }\n                }\n\n                ChainStates.insert(chainStates);\n            }\n\n            // chain.totalVotingPower = totalVP;\n\n            // validators = Validators.find({}).fetch();\n            // console.log(validators);\n            return chain.latestBlockHeight;\n        }\n        catch (e){\n            console.log(url);\n            console.log(e);\n            return \"Error getting chain status.\";\n        }\n    },\n    'chain.getLatestStatus': function(){\n        Chain.find().sort({created:-1}).limit(1);\n    },\n    'chain.genesis': function(){\n        let chain = Chain.findOne({chainId: Meteor.settings.public.chainId});\n\n        if (chain && chain.readGenesis){\n            console.log('Genesis file has been processed');\n        }\n        else if (Meteor.settings.debug.readGenesis) {\n            console.log('=== Start processing genesis file ===');\n            let response = HTTP.get(Meteor.settings.genesisFile);\n            let genesis = JSON.parse(response.content);\n            let distr = genesis.app_state.distr || genesis.app_state.distribution\n            let chainParams = {\n                chainId: genesis.chain_id,\n                genesisTime: genesis.genesis_time,\n                consensusParams: genesis.consensus_params,\n                auth: genesis.app_state.auth,\n                bank: genesis.app_state.bank,\n                staking: {\n                    pool: genesis.app_state.staking.pool,\n                    params: genesis.app_state.staking.params\n                },\n                mint: genesis.app_state.mint,\n                distr: {\n                    communityTax: distr.community_tax,\n                    baseProposerReward: distr.base_proposer_reward,\n                    bonusProposerReward: distr.bonus_proposer_reward,\n                    withdrawAddrEnabled: distr.withdraw_addr_enabled\n                },\n                gov: {\n                    startingProposalId: 0,\n                    depositParams: {},\n                    votingParams: {},\n                    tallyParams: {}\n                },\n                slashing:{\n                    params: genesis.app_state.slashing.params\n                },\n                supply: genesis.app_state.supply,\n                crisis: genesis.app_state.crisis\n            }\n\n            if (genesis.app_state.gov) {\n                chainParams.gov = {\n                    startingProposalId: genesis.app_state.gov.starting_proposal_id,\n                    depositParams: genesis.app_state.gov.deposit_params,\n                    votingParams: genesis.app_state.gov.voting_params,\n                    tallyParams: genesis.app_state.gov.tally_params\n                };\n            }\n            let totalVotingPower = 0;\n\n            // read gentx\n            if (genesis.app_state.genutil && genesis.app_state.genutil.gentxs && (genesis.app_state.genutil.gentxs.length > 0)){\n                for (i in genesis.app_state.genutil.gentxs){\n                    let msg = genesis.app_state.genutil.gentxs[i].value.msg;\n                    // console.log(msg.type);\n                    for (m in msg){\n                        if (msg[m].type == \"cosmos-sdk/MsgCreateValidator\"){\n                            console.log(msg[m].value);\n                            // let command = Meteor.settings.bin.gaiadebug+\" pubkey \"+msg[m].value.pubkey;\n                            let validator = {\n                                consensus_pubkey: msg[m].value.pubkey,\n                                description: msg[m].value.description,\n                                commission: msg[m].value.commission,\n                                min_self_delegation: msg[m].value.min_self_delegation,\n                                operator_address: msg[m].value.validator_address,\n                                delegator_address: msg[m].value.delegator_address,\n                                voting_power: Math.floor(parseInt(msg[m].value.value.amount) / Coin.StakingCoin.fraction),\n                                jailed: false,\n                                status: 2\n                            }\n\n                            totalVotingPower += validator.voting_power;\n\n                            let pubkeyValue = Meteor.call('bech32ToPubkey', msg[m].value.pubkey);\n                            // Validators.upsert({consensus_pubkey:msg[m].value.pubkey},validator);\n\n                            validator.pub_key = {\n                                \"type\":\"tendermint/PubKeyEd25519\",\n                                \"value\":pubkeyValue\n                            }\n\n                            validator.address = getAddress(validator.pub_key);\n                            validator.accpub = Meteor.call('pubkeyToBech32', validator.pub_key, Meteor.settings.public.bech32PrefixAccPub);\n                            validator.operator_pubkey = Meteor.call('pubkeyToBech32', validator.pub_key, Meteor.settings.public.bech32PrefixValPub);\n                            VotingPowerHistory.insert({\n                                address: validator.address,\n                                prev_voting_power: 0,\n                                voting_power: validator.voting_power,\n                                type: 'add',\n                                height: 0,\n                                block_time: genesis.genesis_time\n                            });\n\n                            Validators.insert(validator);\n                        }\n                    }\n                }\n            }\n\n            // read validators from previous chain\n            console.log('read validators from previous chain');\n            if (genesis.app_state.staking.validators && genesis.app_state.staking.validators.length > 0){\n                console.log(genesis.app_state.staking.validators.length);\n                let genValidatorsSet = genesis.app_state.staking.validators;\n                let genValidators = genesis.validators;\n                for (let v in genValidatorsSet){\n                    // console.log(genValidators[v]);\n                    let validator = genValidatorsSet[v];\n                    validator.delegator_address = Meteor.call('getDelegator', genValidatorsSet[v].operator_address);\n\n                    let pubkeyValue = Meteor.call('bech32ToPubkey', validator.consensus_pubkey);\n\n                    validator.pub_key = {\n                        \"type\":\"tendermint/PubKeyEd25519\",\n                        \"value\":pubkeyValue\n                    }\n\n                    validator.address = getAddress(validator.pub_key);\n                    validator.pub_key = validator.pub_key;\n                    validator.accpub = Meteor.call('pubkeyToBech32', validator.pub_key, Meteor.settings.public.bech32PrefixAccPub);\n                    validator.operator_pubkey = Meteor.call('pubkeyToBech32', validator.pub_key, Meteor.settings.public.bech32PrefixValPub);\n\n                    validator.voting_power = findVotingPower(validator, genValidators);\n                    totalVotingPower += validator.voting_power;\n\n                    Validators.upsert({consensus_pubkey:validator.consensus_pubkey},validator);\n                    VotingPowerHistory.insert({\n                        address: validator.address,\n                        prev_voting_power: 0,\n                        voting_power: validator.voting_power,\n                        type: 'add',\n                        height: 0,\n                        block_time: genesis.genesis_time\n                    });\n                }\n            }\n\n            chainParams.readGenesis = true;\n            chainParams.activeVotingPower = totalVotingPower;\n            let result = Chain.upsert({chainId:chainParams.chainId}, {$set:chainParams});\n\n\n            console.log('=== Finished processing genesis file ===');\n\n        }\n\n        return true;\n    }\n})\n","import { Meteor } from 'meteor/meteor';\nimport { Chain, ChainStates } from '../chain.js';\nimport { CoinStats } from '../../coin-stats/coin-stats.js';\nimport { Validators } from '../../validators/validators.js';\n\nMeteor.publish('chainStates.latest', function () {\n    return [\n        ChainStates.find({},{sort:{height:-1},limit:1}),\n        CoinStats.find({},{sort:{last_updated_at:-1},limit:1})\n    ];\n});\n\npublishComposite('chain.status', function(){\n    return {\n        find(){\n            return Chain.find({chainId:Meteor.settings.public.chainId});\n        },\n        children: [\n            {\n                find(chain){\n                    return Validators.find(\n                        {},\n                        {fields:{\n                            address:1,\n                            description:1,\n                            operator_address:1,\n                            status:-1,\n                            jailed:1,\n                            profile_url:1\n                        }}\n                    )\n                }\n            }\n        ]\n    }\n});","import { Mongo } from 'meteor/mongo';\nimport { Validators } from '../validators/validators.js';\n\nexport const Chain = new Mongo.Collection('chain');\nexport const ChainStates = new Mongo.Collection('chain_states')\n\nChain.helpers({\n    proposer(){\n        return Validators.findOne({address:this.proposerAddress});\n    }\n})","import { Meteor } from 'meteor/meteor';\nimport { CoinStats } from '../coin-stats.js';\nimport { HTTP } from 'meteor/http';\n\nMeteor.methods({\n    'coinStats.getCoinStats': function(){\n        this.unblock();\n        let coinId = Meteor.settings.public.coingeckoId;\n        if (coinId){\n            try{\n                let now = new Date();\n                now.setMinutes(0);\n                let url = \"https://api.coingecko.com/api/v3/simple/price?ids=\"+coinId+\"&vs_currencies=usd&include_market_cap=true&include_24hr_vol=true&include_24hr_change=true&include_last_updated_at=true\";\n                let response = HTTP.get(url);\n                if (response.statusCode == 200){\n                    // console.log(JSON.parse(response.content));\n                    let data = JSON.parse(response.content);\n                    data = data[coinId];\n                    // console.log(coinStats);\n                    return CoinStats.upsert({last_updated_at:data.last_updated_at}, {$set:data});\n                }\n            }\n            catch(e){\n                console.log(url);\n                console.log(e);\n            }\n        }\n        else{\n            return \"No coingecko Id provided.\"\n        }\n    },\n    'coinStats.getStats': function(){\n        this.unblock();\n        let coinId = Meteor.settings.public.coingeckoId;\n        if (coinId){\n            return (CoinStats.findOne({},{sort:{last_updated_at:-1}}));\n        }\n        else{\n            return \"No coingecko Id provided.\";\n        }\n\n    }\n})\n","import { Mongo } from 'meteor/mongo';\n\nexport const CoinStats = new Mongo.Collection('coin_stats');\n","import { Meteor } from 'meteor/meteor';\nimport { Delegations } from '../delegations.js';\nimport { Validators } from '../../validators/validators.js';\n\nMeteor.methods({\n    'delegations.getDelegations': function(){\n        this.unblock();\n        let validators = Validators.find({}).fetch();\n        let delegations = [];\n        console.log(\"=== Getting delegations ===\");\n        for (v in validators){\n            if (validators[v].operator_address){\n                let url = LCD + '/staking/validators/'+validators[v].operator_address+\"/delegations\";\n                try{\n                    let response = HTTP.get(url);\n                    if (response.statusCode == 200){\n                        let delegation = JSON.parse(response.content).result;\n                        // console.log(delegation);\n                        delegations = delegations.concat(delegation);\n                    }\n                    else{\n                        console.log(response.statusCode);\n                    }\n                }\n                catch (e){\n                    console.log(url);\n                    console.log(e);\n                }\n            }\n        }\n\n        for (i in delegations){\n            if (delegations[i] && delegations[i].shares)\n                delegations[i].shares = parseFloat(delegations[i].shares);\n        }\n\n        // console.log(delegations);\n        let data = {\n            delegations: delegations,\n            createdAt: new Date(),\n        }\n\n        return Delegations.insert(data);\n    }\n})\n","import { Mongo } from 'meteor/mongo';\n\nexport const Delegations = new Mongo.Collection('delegations');\n","import { HTTP } from 'meteor/http';\n\nMeteor.methods({\n    'transaction.submit': function(txInfo) {\n        const url = `${LCD}/txs`;\n        data = {\n            \"tx\": txInfo.value,\n            \"mode\": \"sync\"\n        }\n        const timestamp = new Date().getTime();\n        console.log(`submitting transaction${timestamp} ${url} with data ${JSON.stringify(data)}`)\n\n        let response = HTTP.post(url, {data});\n        console.log(`response for transaction${timestamp} ${url}: ${JSON.stringify(response)}`)\n        if (response.statusCode == 200) {\n            let data = response.data\n            if (data.code)\n                throw new Meteor.Error(data.code, JSON.parse(data.raw_log).message)\n            return response.data.txhash;\n        }\n    },\n    'transaction.execute': function(body, path) {\n        const url = `${LCD}/${path}`;\n        data = {\n            \"base_req\": {\n                ...body,\n                \"chain_id\": Meteor.settings.public.chainId,\n                \"simulate\": false\n            }\n        };\n        let response = HTTP.post(url, {data});\n        if (response.statusCode == 200) {\n            return JSON.parse(response.content);\n        }\n    },\n    'transaction.simulate': function(txMsg, from, path, adjustment='1.2') {\n        const url = `${LCD}/${path}`;\n        data = {...txMsg,\n            \"base_req\": {\n                \"from\": from,\n                \"chain_id\": Meteor.settings.public.chainId,\n                \"gas_adjustment\": adjustment,\n                \"simulate\": true\n            }\n        };\n        let response = HTTP.post(url, {data});\n        if (response.statusCode == 200) {\n            return JSON.parse(response.content).gas_estimate;\n        }\n    },\n})","import { Meteor } from 'meteor/meteor';\nimport { HTTP } from 'meteor/http';\nimport { Proposals } from '../proposals.js';\nimport { Validators } from '../../validators/validators.js';\n// import { Promise } from 'meteor/promise';\n\nMeteor.methods({\n    'proposals.getProposals': function(){\n        this.unblock();\n        try{\n            let url = LCD + '/gov/proposals';\n            let response = HTTP.get(url);\n            let proposals = JSON.parse(response.content).result;\n            // console.log(proposals);\n\n            let finishedProposalIds = new Set(Proposals.find(\n                {\"proposal_status\":{$in:[\"Passed\", \"Rejected\", \"Removed\"]}}\n            ).fetch().map((p)=> p.proposalId));\n\n            let proposalIds = [];\n            if (proposals.length > 0){\n                // Proposals.upsert()\n                const bulkProposals = Proposals.rawCollection().initializeUnorderedBulkOp();\n                for (let i in proposals){\n                    let proposal = proposals[i];\n                    proposal.proposalId = parseInt(proposal.id);\n                    if (proposal.proposalId > 0 && !finishedProposalIds.has(proposal.proposalId)) {\n                        try{\n                            let url = LCD + '/gov/proposals/'+proposal.proposalId+'/proposer';\n                            let response = HTTP.get(url);\n                            if (response.statusCode == 200){\n                                let proposer = JSON.parse(response.content).result;\n                                if (proposer.proposal_id && (proposer.proposal_id == proposal.id)){\n                                    proposal.proposer = proposer.proposer;\n                                }\n                            }\n                            bulkProposals.find({proposalId: proposal.proposalId}).upsert().updateOne({$set:proposal});\n                            proposalIds.push(proposal.proposalId);\n                        }\n                        catch(e){\n                            bulkProposals.find({proposalId: proposal.proposalId}).upsert().updateOne({$set:proposal});\n                            proposalIds.push(proposal.proposalId);\n                            console.log(e.response.content);\n                        }\n                    }\n                }\n                bulkProposals.find({proposalId:{$nin:proposalIds}, proposal_status:{$nin:[\"Passed\", \"Rejected\", \"Removed\"]}})\n                    .update({$set: {\"proposal_status\": \"Removed\"}});\n                bulkProposals.execute();\n            }\n            return true\n        }\n        catch (e){\n            console.log(e);\n        }\n    },\n    'proposals.getProposalResults': function(){\n        this.unblock();\n        let proposals = Proposals.find({\"proposal_status\":{$nin:[\"Passed\", \"Rejected\", \"Removed\"]}}).fetch();\n\n        if (proposals && (proposals.length > 0)){\n            for (let i in proposals){\n                if (parseInt(proposals[i].proposalId) > 0){\n                    try{\n                        // get proposal deposits\n                        let url = LCD + '/gov/proposals/'+proposals[i].proposalId+'/deposits';\n                        let response = HTTP.get(url);\n                        let proposal = {proposalId: proposals[i].proposalId};\n                        if (response.statusCode == 200){\n                            let deposits = JSON.parse(response.content).result;\n                            proposal.deposits = deposits;\n                        }\n\n                        url = LCD + '/gov/proposals/'+proposals[i].proposalId+'/votes';\n                        response = HTTP.get(url);\n                        if (response.statusCode == 200){\n                            let votes = JSON.parse(response.content).result;\n                            proposal.votes = getVoteDetail(votes);\n                        }\n\n                        url = LCD + '/gov/proposals/'+proposals[i].proposalId+'/tally';\n                        response = HTTP.get(url);\n                        if (response.statusCode == 200){\n                            let tally = JSON.parse(response.content).result;\n                            proposal.tally = tally;\n                        }\n\n                        proposal.updatedAt = new Date();\n                        Proposals.update({proposalId: proposals[i].proposalId}, {$set:proposal});\n                    }\n                    catch(e){\n\n                    }\n                }\n            }\n        }\n        return true\n    }\n})\n\nconst getVoteDetail = (votes) => {\n    if (!votes) {\n        return [];\n    }\n\n    let voters = votes.map((vote) => vote.voter);\n    let votingPowerMap = {};\n    let validatorAddressMap = {};\n    Validators.find({delegator_address: {$in: voters}}).forEach((validator) => {\n        votingPowerMap[validator.delegator_address] = {\n            moniker: validator.description.moniker,\n            address: validator.address,\n            tokens: parseFloat(validator.tokens),\n            delegatorShares: parseFloat(validator.delegator_shares),\n            deductedShares: parseFloat(validator.delegator_shares)\n        }\n        validatorAddressMap[validator.operator_address] = validator.delegator_address;\n    });\n    voters.forEach((voter) => {\n        if (!votingPowerMap[voter]) {\n            // voter is not a validator\n            let url = `${LCD}/staking/delegators/${voter}/delegations`;\n            let delegations;\n            let votingPower = 0;\n            try{\n                let response = HTTP.get(url);\n                if (response.statusCode == 200){\n                    delegations = JSON.parse(response.content).result;\n                    if (delegations && delegations.length > 0) {\n                        delegations.forEach((delegation) => {\n                            let shares = parseFloat(delegation.shares);\n                            if (validatorAddressMap[delegation.validator_address]) {\n                                // deduct delegated shareds from validator if a delegator votes\n                                let validator = votingPowerMap[validatorAddressMap[delegation.validator_address]];\n                                validator.deductedShares -= shares;\n                                if (validator.delegator_shares != 0){ // avoiding division by zero\n                                    votingPower += (shares/validator.delegatorShares) * validator.tokens;\n                                }\n\n                            } else {\n                                let validator = Validators.findOne({operator_address: delegation.validator_address});\n                                if (validator && validator.delegator_shares != 0){ // avoiding division by zero\n                                    votingPower += (shares/parseFloat(validator.delegator_shares)) * parseFloat(validator.tokens);\n                                }\n                            }\n                        });\n                    }\n                }\n            }\n            catch (e){\n                console.log(e);\n            }\n            votingPowerMap[voter] = {votingPower: votingPower};\n        }\n    });\n    return votes.map((vote) => {\n        let voter = votingPowerMap[vote.voter];\n        let votingPower = voter.votingPower;\n        if (votingPower == undefined) {\n            // voter is a validator\n            votingPower = voter.delegatorShares?((voter.deductedShares/voter.delegatorShares) * voter.tokens):0;\n        }\n        return {...vote, votingPower};\n    });\n}\n","import { Meteor } from 'meteor/meteor';\nimport { Proposals } from '../proposals.js';\nimport { check } from 'meteor/check'\n\nMeteor.publish('proposals.list', function () {\n    return Proposals.find({}, {sort:{proposalId:-1}});\n});\n\nMeteor.publish('proposals.one', function (id){\n    check(id, Number);\n    return Proposals.find({proposalId:id});\n})","import { Mongo } from 'meteor/mongo';\n\nexport const Proposals = new Mongo.Collection('proposals');\n","import { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\nimport { ValidatorRecords, Analytics, AverageData, AverageValidatorData } from '../records.js';\nimport { Validators } from '../../validators/validators.js';\nimport { ValidatorSets } from '/imports/api/validator-sets/validator-sets.js';\nimport { Status } from '../../status/status.js';\nimport { MissedBlocksStats } from '../records.js';\nimport { MissedBlocks } from '../records.js';\nimport { Blockscon } from '../../blocks/blocks.js';\nimport { Chain } from '../../chain/chain.js';\nimport _ from 'lodash';\nconst BULKUPDATEMAXSIZE = 1000;\n\nconst getBlockStats = (startHeight, latestHeight) => {\n    let blockStats = {};\n    const cond = {$and: [\n        { height: { $gt: startHeight } },\n        { height: { $lte: latestHeight } } ]};\n    const options = {sort:{height: 1}};\n    Blockscon.find(cond, options).forEach((block) => {\n        blockStats[block.height] = {\n            height: block.height,\n            proposerAddress: block.proposerAddress,\n            precommitsCount: block.precommitsCount,\n            validatorsCount: block.validatorsCount,\n            validators: block.validators,\n            time: block.time\n        }\n    });\n\n    Analytics.find(cond, options).forEach((block) => {\n        if (!blockStats[block.height]) {\n            blockStats[block.height] = { height: block.height };\n            console.log(`block ${block.height} does not have an entry`);\n        }\n        _.assign(blockStats[block.height], {\n            precommits: block.precommits,\n            averageBlockTime: block.averageBlockTime,\n            timeDiff: block.timeDiff,\n            voting_power: block.voting_power\n        });\n    });\n    return blockStats;\n}\n\nconst getPreviousRecord = (voterAddress, proposerAddress) => {\n    let previousRecord = MissedBlocks.findOne(\n        {voter:voterAddress, proposer:proposerAddress, blockHeight: -1});\n    let lastUpdatedHeight = Meteor.settings.params.startHeight;\n    let prevStats = {};\n    if (previousRecord) {\n        prevStats = _.pick(previousRecord, ['missCount', 'totalCount']);\n    } else {\n        prevStats = {\n            missCount: 0,\n            totalCount: 0\n        }\n    }\n    return prevStats;\n}\n\nMeteor.methods({\n    'ValidatorRecords.calculateMissedBlocks': function(){\n        if (!COUNTMISSEDBLOCKS){\n            try {\n                let startTime = Date.now();\n                COUNTMISSEDBLOCKS = true;\n                console.log('calulate missed blocks count');\n                this.unblock();\n                let validators = Validators.find({}).fetch();\n                let latestHeight = Meteor.call('blocks.getCurrentHeight');\n                let explorerStatus = Status.findOne({chainId: Meteor.settings.public.chainId});\n                let startHeight = (explorerStatus&&explorerStatus.lastProcessedMissedBlockHeight)?explorerStatus.lastProcessedMissedBlockHeight:Meteor.settings.params.startHeight;\n                latestHeight = Math.min(startHeight + BULKUPDATEMAXSIZE, latestHeight);\n                const bulkMissedStats = MissedBlocks.rawCollection().initializeOrderedBulkOp();\n\n                let validatorsMap = {};\n                validators.forEach((validator) => validatorsMap[validator.address] = validator);\n\n                // a map of block height to block stats\n                let blockStats = getBlockStats(startHeight, latestHeight);\n\n                // proposerVoterStats is a proposer-voter map counting numbers of proposed blocks of which voter is an active validator\n                let proposerVoterStats = {}\n\n                _.forEach(blockStats, (block, blockHeight) => {\n                    let proposerAddress = block.proposerAddress;\n                    let votedValidators = new Set(block.validators);\n                    let validatorSets = ValidatorSets.findOne({block_height:block.height});\n                    let votedVotingPower = 0;\n\n                    validatorSets.validators.forEach((activeValidator) => {\n                        if (votedValidators.has(activeValidator.address))\n                            votedVotingPower += parseFloat(activeValidator.voting_power)\n                    })\n\n                    validatorSets.validators.forEach((activeValidator) => {\n                        let currentValidator = activeValidator.address\n                        if (!_.has(proposerVoterStats, [proposerAddress, currentValidator])) {\n                            let prevStats = getPreviousRecord(currentValidator, proposerAddress);\n                            _.set(proposerVoterStats, [proposerAddress, currentValidator], prevStats);\n                        }\n\n                        _.update(proposerVoterStats, [proposerAddress, currentValidator, 'totalCount'], (n) => n+1);\n                        if (!votedValidators.has(currentValidator)) {\n                            _.update(proposerVoterStats, [proposerAddress, currentValidator, 'missCount'], (n) => n+1);\n                            bulkMissedStats.insert({\n                                voter: currentValidator,\n                                blockHeight: block.height,\n                                proposer: proposerAddress,\n                                precommitsCount: block.precommitsCount,\n                                validatorsCount: block.validatorsCount,\n                                time: block.time,\n                                precommits: block.precommits,\n                                averageBlockTime: block.averageBlockTime,\n                                timeDiff: block.timeDiff,\n                                votingPower: block.voting_power,\n                                votedVotingPower,\n                                updatedAt: latestHeight,\n                                missCount: _.get(proposerVoterStats, [proposerAddress, currentValidator, 'missCount']),\n                                totalCount: _.get(proposerVoterStats, [proposerAddress, currentValidator, 'totalCount'])\n                            });\n                        }\n                    })\n                });\n\n                _.forEach(proposerVoterStats, (voters, proposerAddress) => {\n                    _.forEach(voters, (stats, voterAddress) => {\n                        bulkMissedStats.find({\n                            voter: voterAddress,\n                            proposer: proposerAddress,\n                            blockHeight: -1\n                        }).upsert().updateOne({$set: {\n                            voter: voterAddress,\n                            proposer: proposerAddress,\n                            blockHeight: -1,\n                            updatedAt: latestHeight,\n                            missCount: _.get(stats, 'missCount'),\n                            totalCount: _.get(stats, 'totalCount')\n                        }});\n                    });\n                });\n\n                let message = '';\n                if (bulkMissedStats.length > 0){\n                    const client = MissedBlocks._driver.mongo.client;\n                    // TODO: add transaction back after replica set(#146) is set up\n                    // let session = client.startSession();\n                    // session.startTransaction();\n                    let bulkPromise = bulkMissedStats.execute(null/*, {session}*/).then(\n                        Meteor.bindEnvironment((result, err) => {\n                            if (err){\n                                COUNTMISSEDBLOCKS = false;\n                                // Promise.await(session.abortTransaction());\n                                throw err;\n                            }\n                            if (result){\n                                // Promise.await(session.commitTransaction());\n                                message = `(${result.result.nInserted} inserted, ` +\n                                           `${result.result.nUpserted} upserted, ` +\n                                           `${result.result.nModified} modified)`;\n                            }\n                        }));\n\n                    Promise.await(bulkPromise);\n                }\n\n                COUNTMISSEDBLOCKS = false;\n                Status.upsert({chainId: Meteor.settings.public.chainId}, {$set:{lastProcessedMissedBlockHeight:latestHeight, lastProcessedMissedBlockTime: new Date()}});\n                return `done in ${Date.now() - startTime}ms ${message}`;\n            } catch (e) {\n                COUNTMISSEDBLOCKS = false;\n                throw e;\n            }\n        }\n        else{\n            return \"updating...\";\n        }\n    },\n    'ValidatorRecords.calculateMissedBlocksStats': function(){\n        // TODO: deprecate this method and MissedBlocksStats collection\n        // console.log(\"ValidatorRecords.calculateMissedBlocks: \"+COUNTMISSEDBLOCKS);\n        if (!COUNTMISSEDBLOCKSSTATS){\n            COUNTMISSEDBLOCKSSTATS = true;\n            console.log('calulate missed blocks stats');\n            this.unblock();\n            let validators = Validators.find({}).fetch();\n            let latestHeight = Meteor.call('blocks.getCurrentHeight');\n            let explorerStatus = Status.findOne({chainId: Meteor.settings.public.chainId});\n            let startHeight = (explorerStatus&&explorerStatus.lastMissedBlockHeight)?explorerStatus.lastMissedBlockHeight:Meteor.settings.params.startHeight;\n            // console.log(latestHeight);\n            // console.log(startHeight);\n            const bulkMissedStats = MissedBlocksStats.rawCollection().initializeUnorderedBulkOp();\n            for (i in validators){\n                // if ((validators[i].address == \"B8552EAC0D123A6BF609123047A5181D45EE90B5\") || (validators[i].address == \"69D99B2C66043ACBEAA8447525C356AFC6408E0C\") || (validators[i].address == \"35AD7A2CD2FC71711A675830EC1158082273D457\")){\n                let voterAddress = validators[i].address;\n                let missedRecords = ValidatorRecords.find({\n                    address:voterAddress,\n                    exists:false,\n                    $and: [ { height: { $gt: startHeight } }, { height: { $lte: latestHeight } } ]\n                }).fetch();\n\n                let counts = {};\n\n                // console.log(\"missedRecords to process: \"+missedRecords.length);\n                for (b in missedRecords){\n                    let block = Blockscon.findOne({height:missedRecords[b].height});\n                    let existingRecord = MissedBlocksStats.findOne({voter:voterAddress, proposer:block.proposerAddress});\n\n                    if (typeof counts[block.proposerAddress] === 'undefined'){\n                        if (existingRecord){\n                            counts[block.proposerAddress] = existingRecord.count+1;\n                        }\n                        else{\n                            counts[block.proposerAddress] = 1;\n                        }\n                    }\n                    else{\n                        counts[block.proposerAddress]++;\n                    }\n                }\n\n                for (address in counts){\n                    let data = {\n                        voter: voterAddress,\n                        proposer:address,\n                        count: counts[address]\n                    }\n\n                    bulkMissedStats.find({voter:voterAddress, proposer:address}).upsert().updateOne({$set:data});\n                }\n                // }\n\n            }\n\n            if (bulkMissedStats.length > 0){\n                bulkMissedStats.execute(Meteor.bindEnvironment((err, result) => {\n                    if (err){\n                        COUNTMISSEDBLOCKSSTATS = false;\n                        console.log(err);\n                    }\n                    if (result){\n                        Status.upsert({chainId: Meteor.settings.public.chainId}, {$set:{lastMissedBlockHeight:latestHeight, lastMissedBlockTime: new Date()}});\n                        COUNTMISSEDBLOCKSSTATS = false;\n                        console.log(\"done\");\n                    }\n                }));\n            }\n            else{\n                COUNTMISSEDBLOCKSSTATS = false;\n            }\n\n            return true;\n        }\n        else{\n            return \"updating...\";\n        }\n    },\n    'Analytics.aggregateBlockTimeAndVotingPower': function(time){\n        this.unblock();\n        let now = new Date();\n\n        if (time == 'm'){\n            let averageBlockTime = 0;\n            let averageVotingPower = 0;\n\n            let analytics = Analytics.find({ \"time\": { $gt: new Date(Date.now() - 60 * 1000) } }).fetch();\n            if (analytics.length > 0){\n                for (i in analytics){\n                    averageBlockTime += analytics[i].timeDiff;\n                    averageVotingPower += analytics[i].voting_power;\n                }\n                averageBlockTime = averageBlockTime / analytics.length;\n                averageVotingPower = averageVotingPower / analytics.length;\n\n                Chain.update({chainId:Meteor.settings.public.chainId},{$set:{lastMinuteVotingPower:averageVotingPower, lastMinuteBlockTime:averageBlockTime}});\n                AverageData.insert({\n                    averageBlockTime: averageBlockTime,\n                    averageVotingPower: averageVotingPower,\n                    type: time,\n                    createdAt: now\n                })\n            }\n        }\n        if (time == 'h'){\n            let averageBlockTime = 0;\n            let averageVotingPower = 0;\n            let analytics = Analytics.find({ \"time\": { $gt: new Date(Date.now() - 60*60 * 1000) } }).fetch();\n            if (analytics.length > 0){\n                for (i in analytics){\n                    averageBlockTime += analytics[i].timeDiff;\n                    averageVotingPower += analytics[i].voting_power;\n                }\n                averageBlockTime = averageBlockTime / analytics.length;\n                averageVotingPower = averageVotingPower / analytics.length;\n\n                Chain.update({chainId:Meteor.settings.public.chainId},{$set:{lastHourVotingPower:averageVotingPower, lastHourBlockTime:averageBlockTime}});\n                AverageData.insert({\n                    averageBlockTime: averageBlockTime,\n                    averageVotingPower: averageVotingPower,\n                    type: time,\n                    createdAt: now\n                })\n            }\n        }\n\n        if (time == 'd'){\n            let averageBlockTime = 0;\n            let averageVotingPower = 0;\n            let analytics = Analytics.find({ \"time\": { $gt: new Date(Date.now() - 24*60*60 * 1000) } }).fetch();\n            if (analytics.length > 0){\n                for (i in analytics){\n                    averageBlockTime += analytics[i].timeDiff;\n                    averageVotingPower += analytics[i].voting_power;\n                }\n                averageBlockTime = averageBlockTime / analytics.length;\n                averageVotingPower = averageVotingPower / analytics.length;\n\n                Chain.update({chainId:Meteor.settings.public.chainId},{$set:{lastDayVotingPower:averageVotingPower, lastDayBlockTime:averageBlockTime}});\n                AverageData.insert({\n                    averageBlockTime: averageBlockTime,\n                    averageVotingPower: averageVotingPower,\n                    type: time,\n                    createdAt: now\n                })\n            }\n        }\n\n        // return analytics.length;\n    },\n    'Analytics.aggregateValidatorDailyBlockTime': function(){\n        this.unblock();\n        let validators = Validators.find({}).fetch();\n        let now = new Date();\n        for (i in validators){\n            let averageBlockTime = 0;\n\n            let blocks = Blockscon.find({proposerAddress:validators[i].address, \"time\": { $gt: new Date(Date.now() - 24*60*60 * 1000) }}, {fields:{height:1}}).fetch();\n\n            if (blocks.length > 0){\n                let blockHeights = [];\n                for (b in blocks){\n                    blockHeights.push(blocks[b].height);\n                }\n\n                let analytics = Analytics.find({height: {$in:blockHeights}}, {fields:{height:1,timeDiff:1}}).fetch();\n\n\n                for (a in analytics){\n                    averageBlockTime += analytics[a].timeDiff;\n                }\n\n                averageBlockTime = averageBlockTime / analytics.length;\n            }\n\n            AverageValidatorData.insert({\n                proposerAddress: validators[i].address,\n                averageBlockTime: averageBlockTime,\n                type: 'ValidatorDailyAverageBlockTime',\n                createdAt: now\n            })\n        }\n\n        return true;\n    }\n})\n","import { Meteor } from 'meteor/meteor';\nimport { ValidatorRecords, Analytics, MissedBlocks, MissedBlocksStats, VPDistributions } from '../records.js';\nimport { Validators } from '../../validators/validators.js';\n\nMeteor.publish('validator_records.all', function () {\n    return ValidatorRecords.find();\n});\n\nMeteor.publish('validator_records.uptime', function(address, num){\n    return ValidatorRecords.find({address:address},{limit:num, sort:{height:-1}});\n});\n\nMeteor.publish('analytics.history', function(){\n    return Analytics.find({},{sort:{height:-1},limit:50});\n});\n\nMeteor.publish('vpDistribution.latest', function(){\n    return VPDistributions.find({},{sort:{height:-1}, limit:1});\n});\n\npublishComposite('missedblocks.validator', function(address, type){\n    let conditions = {};\n    if (type == 'voter'){\n        conditions = {\n            voter: address\n        }\n    }\n    else{\n        conditions = {\n            proposer: address\n        }\n    }\n    return {\n        find(){\n            return MissedBlocksStats.find(conditions)\n        },\n        children: [\n            {\n                find(stats){\n                    return Validators.find(\n                        {},\n                        {fields:{address:1, description:1, profile_url:1}}\n                    )\n                }\n            }\n        ]\n    }\n});\n\npublishComposite('missedrecords.validator', function(address, type){\n    return {\n        find(){\n            return MissedBlocks.find(\n                {[type]: address},\n                {sort: {updatedAt: -1}}\n            )\n        },\n        children: [\n            {\n                find(){\n                    return Validators.find(\n                        {},\n                        {fields:{address:1, description:1, operator_address:1}}\n                    )\n                }\n            }\n        ]\n    }\n});\n","import { Mongo } from 'meteor/mongo';\nimport { Validators } from '../validators/validators';\n\nexport const ValidatorRecords = new Mongo.Collection('validator_records');\nexport const Analytics = new Mongo.Collection('analytics');\nexport const MissedBlocksStats = new Mongo.Collection('missed_blocks_stats');\nexport const MissedBlocks = new  Mongo.Collection('missed_blocks');\nexport const VPDistributions = new Mongo.Collection('voting_power_distributions');\nexport const AverageData = new Mongo.Collection('average_data');\nexport const AverageValidatorData = new Mongo.Collection('average_validator_data');\n\nMissedBlocksStats.helpers({\n    proposerMoniker(){\n        let validator = Validators.findOne({address:this.proposer});\n        return (validator.description)?validator.description.moniker:this.proposer;\n    },\n    voterMoniker(){\n        let validator = Validators.findOne({address:this.voter});\n        return (validator.description)?validator.description.moniker:this.voter;\n    }\n})\n","import { Meteor } from 'meteor/meteor';\nimport { check } from 'meteor/check'\nimport { Status } from '../status.js';\n\nMeteor.publish ('status.status', function () {\n    return Status.find ({ chainId : Meteor.settings.public.chainId });\n});\n\n","import { Mongo } from 'meteor/mongo';\n\nexport const Status = new Mongo.Collection('status');","import { Meteor } from 'meteor/meteor';\nimport { HTTP } from 'meteor/http';\nimport { Transactions } from '../../transactions/transactions.js';\nimport { Validators } from '../../validators/validators.js';\nimport { VotingPowerHistory } from '../../voting-power/history.js';\n\nconst AddressLength = 40;\n\nMeteor.methods({\n    'Transactions.index': function(hash, blockTime){\n        this.unblock();\n        hash = hash.toUpperCase();\n        console.log(\"Get tx: \"+hash)\n        try {\n            let url = LCD+ '/txs/'+hash;\n            let response = HTTP.get(url);\n            let tx = JSON.parse(response.content);\n\n            console.log(hash);\n\n            tx.height = parseInt(tx.height);\n\n            let txId = Transactions.insert(tx);\n            if (txId){\n                return txId;\n            }\n            else return false;\n\n        }\n        catch(e) {\n            console.log(url);\n            console.log(e)\n        }\n    },\n    'Transactions.findDelegation': function(address, height){\n        // following cosmos-sdk/x/slashing/spec/06_events.md and cosmos-sdk/x/staking/spec/06_events.md\n        return Transactions.find({\n                $or: [{$and: [\n                        {\"logs.events.type\": \"delegate\"},\n                        {\"logs.events.attributes.key\": \"validator\"},\n                        {\"logs.events.attributes.value\": address}\n                    ]}, {$and:[\n                        {\"logs.events.attributes.key\": \"action\"},\n                        {\"logs.events.attributes.value\": \"unjail\"},\n                        {\"logs.events.attributes.key\": \"sender\"},\n                        {\"logs.events.attributes.value\": address}\n                    ]}, {$and:[\n                        {\"logs.events.type\": \"create_validator\"},\n                        {\"logs.events.attributes.key\": \"validator\"},\n                        {\"logs.events.attributes.value\": address}\n                    ]}, {$and:[\n                        {\"logs.events.type\": \"unbond\"},\n                        {\"logs.events.attributes.key\": \"validator\"},\n                        {\"logs.events.attributes.value\": address}\n                    ]}, {$and:[\n                        {\"logs.events.type\": \"redelegate\"},\n                        {\"logs.events.attributes.key\": \"destination_validator\"},\n                        {\"logs.events.attributes.value\": address}\n                    ]}],\n                \"code\": {$exists: false},\n                height:{$lt:height}},\n            {sort:{height:-1},\n                limit: 1}\n        ).fetch();\n    },\n    'Transactions.findUser': function(address, fields=null){\n        // address is either delegator address or validator operator address\n        let validator;\n        if (!fields)\n            fields = {address:1, description:1, operator_address:1, delegator_address:1};\n        if (address.includes(Meteor.settings.public.bech32PrefixValAddr)){\n            // validator operator address\n            validator = Validators.findOne({operator_address:address}, {fields});\n        }\n        else if (address.includes(Meteor.settings.public.bech32PrefixAccAddr)){\n            // delegator address\n            validator = Validators.findOne({delegator_address:address}, {fields});\n        }\n        else if (address.length === AddressLength) {\n            validator = Validators.findOne({address:address}, {fields});\n        }\n        if (validator){\n            return validator;\n        }\n        return false;\n\n    }\n});\n","import { Meteor } from 'meteor/meteor';\nimport { Transactions } from '../transactions.js';\nimport { Blockscon } from '../../blocks/blocks.js';\n\npublishComposite('transactions.list', function(limit = 30){\n    return {\n        find(){\n            return Transactions.find({},{sort:{height:-1}, limit:limit})\n        },\n        children: [\n            {\n                find(tx){\n                    return Blockscon.find(\n                        {height:tx.height},\n                        {fields:{time:1, height:1}}\n                    )\n                }\n            }\n        ]\n    }\n});\n\npublishComposite('transactions.validator', function(validatorAddress, delegatorAddress, limit=100){\n    let query = {};\n    if (validatorAddress && delegatorAddress){\n        query = {$or:[{\"logs.events.attributes.value\":validatorAddress}, {\"logs.events.attributes.value\":delegatorAddress}]}\n    }\n\n    if (!validatorAddress && delegatorAddress){\n        query = {\"logs.events.attributes.value\":delegatorAddress}\n    }\n\n    return {\n        find(){\n            return Transactions.find(query, {sort:{height:-1}, limit:limit})\n        },\n        children:[\n            {\n                find(tx){\n                    return Blockscon.find(\n                        {height:tx.height},\n                        {fields:{time:1, height:1}}\n                    )\n                }\n            }\n        ]\n    }\n})\n\npublishComposite('transactions.findOne', function(hash){\n    return {\n        find(){\n            return Transactions.find({txhash:hash})\n        },\n        children: [\n            {\n                find(tx){\n                    return Blockscon.find(\n                        {height:tx.height},\n                        {fields:{time:1, height:1}}\n                    )\n                }\n            }\n        ]\n    }\n})\n\npublishComposite('transactions.height', function(height){\n    return {\n        find(){\n            return Transactions.find({height:height})\n        },\n        children: [\n            {\n                find(tx){\n                    return Blockscon.find(\n                        {height:tx.height},\n                        {fields:{time:1, height:1}}\n                    )\n                }\n            }\n        ]\n    }\n})\n","import { Mongo } from 'meteor/mongo';\nimport { Blockscon } from '../blocks/blocks.js';\nimport { TxIcon } from '../../ui/components/Icons.jsx';\n\nexport const Transactions = new Mongo.Collection('transactions');\n\nTransactions.helpers({\n    block(){\n        return Blockscon.findOne({height:this.height});\n    }\n})","import { Meteor } from 'meteor/meteor';\nimport { Transactions } from '../../transactions/transactions.js';\nimport { Blockscon } from '../../blocks/blocks.js';\nimport { Delegations } from '../../delegations/delegations.js';\n\nMeteor.methods({\n    'Validators.findCreateValidatorTime': function(address){\n        // look up the create validator time to consider if the validator has never updated the commission\n        let tx = Transactions.findOne({$and:[\n                {\"tx.value.msg.value.delegator_address\":address},\n                {\"tx.value.msg.type\":\"cosmos-sdk/MsgCreateValidator\"},\n                {code:{$exists:false}}\n            ]});\n\n        if (tx){\n            let block = Blockscon.findOne({height:tx.height});\n            if (block){\n                return block.time;\n            }\n        }\n        else{\n            // no such create validator tx\n            return false;\n        }\n    },\n    // async 'Validators.getAllDelegations'(address){\n    'Validators.getAllDelegations'(address){\n        let url = LCD + '/staking/validators/'+address+'/delegations';\n\n        try{\n            let delegations = HTTP.get(url);\n            if (delegations.statusCode == 200){\n                delegations = JSON.parse(delegations.content).result;\n                delegations.forEach((delegation, i) => {\n                    if (delegations[i] && delegations[i].shares)\n                        delegations[i].shares = parseFloat(delegations[i].shares);\n                })\n\n                return delegations;\n            };\n        }\n        catch (e){\n            console.log(url);\n            console.log(e);\n        }\n    }\n});\n","import { Meteor } from 'meteor/meteor';\nimport { Validators } from '../validators.js';\nimport { ValidatorRecords } from '../../records/records.js';\nimport { VotingPowerHistory } from '../../voting-power/history.js';\n\nMeteor.publish('validators.all', function (sort = \"description.moniker\", direction = -1, fields={}) {\n    return Validators.find({}, {sort: {[sort]: direction}, fields: fields});\n});\n\npublishComposite('validators.firstSeen',{\n    find() {\n        return Validators.find({});\n    },\n    children: [\n        {\n            find(val) {\n                return ValidatorRecords.find(\n                    { address: val.address },\n                    { sort: {height: 1}, limit: 1}\n                );\n            }\n        }\n    ]\n});\n\nMeteor.publish('validators.voting_power', function(){\n    return Validators.find({\n        status: 2,\n        jailed:false\n    },{\n        sort:{\n            voting_power:-1\n        },\n        fields:{\n            address: 1,\n            description:1,\n            voting_power:1,\n            profile_url:1\n        }\n    }\n    );\n});\n\npublishComposite('validator.details', function(address){\n    let options = {address:address};\n    if (address.indexOf(Meteor.settings.public.bech32PrefixValAddr) != -1){\n        options = {operator_address:address}\n    }\n    return {\n        find(){\n            return Validators.find(options)\n        },\n        children: [\n            {\n                find(val){\n                    return VotingPowerHistory.find(\n                        {address:val.address},\n                        {sort:{height:-1}, limit:50}\n                    )\n                }\n            },\n            {\n                find(val) {\n                    return ValidatorRecords.find(\n                        { address: val.address },\n                        { sort: {height: -1}, limit: Meteor.settings.public.uptimeWindow}\n                    );\n                }\n            }\n        ]\n    }\n});\n","import { Mongo } from 'meteor/mongo';\nimport { ValidatorRecords } from '../records/records.js';\nimport { VotingPowerHistory } from '../voting-power/history.js';\n\nexport const Validators = new Mongo.Collection('validators');\n\nValidators.helpers({\n    firstSeen(){\n        return ValidatorRecords.findOne({address:this.address});\n    },\n    history(){\n        return VotingPowerHistory.find({address:this.address}, {sort:{height:-1}, limit:50}).fetch();\n    }\n})\n// Validators.helpers({\n//     uptime(){\n//         // console.log(this.address);\n//         let lastHundred = ValidatorRecords.find({address:this.address}, {sort:{height:-1}, limit:100}).fetch();\n//         console.log(lastHundred);\n//         let uptime = 0;\n//         for (i in lastHundred){\n//             if (lastHundred[i].exists){\n//                 uptime+=1;\n//             }\n//         }\n//         return uptime;\n//     }\n// })","import { Mongo } from 'meteor/mongo';\n\nexport const VotingPowerHistory = new Mongo.Collection('voting_power_history');\n","import { Mongo } from 'meteor/mongo';\n\nexport const Evidences = new Mongo.Collection('evidences');\n","import { Mongo } from 'meteor/mongo';\n\nexport const ValidatorSets = new Mongo.Collection('validator_sets');\n","// Import modules used by both client and server through a single index entry point\n// e.g. useraccounts configuration file.\n","import { Blockscon } from '../../api/blocks/blocks.js';\nimport { Proposals } from '../../api/proposals/proposals.js';\nimport { ValidatorRecords, Analytics, MissedBlocksStats, MissedBlocks, AverageData, AverageValidatorData } from '../../api/records/records.js';\n// import { Status } from '../../api/status/status.js';\nimport { Transactions } from '../../api/transactions/transactions.js';\nimport { ValidatorSets } from '../../api/validator-sets/validator-sets.js';\nimport { Validators } from '../../api/validators/validators.js';\nimport { VotingPowerHistory } from '../../api/voting-power/history.js';\nimport { Evidences } from '../../api/evidences/evidences.js';\nimport { CoinStats } from '../../api/coin-stats/coin-stats.js';\nimport { ChainStates } from '../../api/chain/chain.js';\n\nChainStates.rawCollection().createIndex({height: -1},{unique:true});\n\nBlockscon.rawCollection().createIndex({height: -1},{unique:true});\nBlockscon.rawCollection().createIndex({proposerAddress:1});\n\nEvidences.rawCollection().createIndex({height: -1});\n\nProposals.rawCollection().createIndex({proposalId: 1}, {unique:true});\n\nValidatorRecords.rawCollection().createIndex({address:1,height: -1}, {unique:1});\nValidatorRecords.rawCollection().createIndex({address:1,exists:1, height: -1});\n\nAnalytics.rawCollection().createIndex({height: -1}, {unique:true})\n\nMissedBlocks.rawCollection().createIndex({proposer:1, voter:1, updatedAt: -1});\nMissedBlocks.rawCollection().createIndex({proposer:1, blockHeight:-1});\nMissedBlocks.rawCollection().createIndex({voter:1, blockHeight:-1});\nMissedBlocks.rawCollection().createIndex({voter:1, proposer:1, blockHeight:-1}, {unique:true});\n\nMissedBlocksStats.rawCollection().createIndex({proposer:1});\nMissedBlocksStats.rawCollection().createIndex({voter:1});\nMissedBlocksStats.rawCollection().createIndex({proposer:1, voter:1},{unique:true});\n\nAverageData.rawCollection().createIndex({type:1, createdAt:-1},{unique:true});\nAverageValidatorData.rawCollection().createIndex({proposerAddress:1,createdAt:-1},{unique:true});\n// Status.rawCollection.createIndex({})\n\nTransactions.rawCollection().createIndex({txhash:1},{unique:true});\nTransactions.rawCollection().createIndex({height:-1});\n// Transactions.rawCollection().createIndex({action:1});\nTransactions.rawCollection().createIndex({\"events.attributes.key\":1});\nTransactions.rawCollection().createIndex({\"events.attributes.value\":1});\n\nValidatorSets.rawCollection().createIndex({block_height:-1});\n\nValidators.rawCollection().createIndex({address:1},{unique:true, partialFilterExpression: { address: { $exists: true } } });\nValidators.rawCollection().createIndex({consensus_pubkey:1},{unique:true});\nValidators.rawCollection().createIndex({\"pub_key.value\":1},{unique:true, partialFilterExpression: { \"pub_key.value\": { $exists: true } }});\n\nVotingPowerHistory.rawCollection().createIndex({address:1,height:-1});\nVotingPowerHistory.rawCollection().createIndex({type:1});\n\nCoinStats.rawCollection().createIndex({last_updated_at:-1},{unique:true});\n","// Import server startup through a single index entry point\n\nimport './util.js';\nimport './register-api.js';\nimport './create-indexes.js';\n\n// import React from 'react';\n// import { renderToNodeStream } from 'react-dom/server';\n// import { renderToString } from \"react-dom/server\";\nimport { onPageLoad } from 'meteor/server-render';\n// import { StaticRouter } from 'react-router-dom';\n// import { ServerStyleSheet } from \"styled-components\"\nimport { Helmet } from 'react-helmet';\n\n// import App from '../../ui/App.jsx';\n\nonPageLoad(sink => {\n    // const context = {};\n    // const sheet = new ServerStyleSheet()\n\n    // const html = renderToString(sheet.collectStyles(\n    //     <StaticRouter location={sink.request.url} context={context}>\n    //         <App />\n    //     </StaticRouter>\n    //   ));\n\n    // sink.renderIntoElementById('app', html);\n\n    const helmet = Helmet.renderStatic();\n    sink.appendToHead(helmet.meta.toString());\n    sink.appendToHead(helmet.title.toString());\n\n    // sink.appendToHead(sheet.getStyleTags());\n});","// Register your apis here\n\nimport '../../api/ledger/server/methods.js';\n\nimport '../../api/chain/server/methods.js';\nimport '../../api/chain/server/publications.js';\n\nimport '../../api/blocks/server/methods.js';\nimport '../../api/blocks/server/publications.js';\n\nimport '../../api/validators/server/methods.js';\nimport '../../api/validators/server/publications.js';\n\nimport '../../api/records/server/methods.js';\nimport '../../api/records/server/publications.js';\n\nimport '../../api/proposals/server/methods.js';\nimport '../../api/proposals/server/publications.js';\n\nimport '../../api/voting-power/server/publications.js';\n\nimport '../../api/transactions/server/methods.js';\nimport '../../api/transactions/server/publications.js';\n\nimport '../../api/delegations/server/methods.js';\nimport '../../api/delegations/server/publications.js';\n\nimport '../../api/status/server/publications.js';\n\nimport '../../api/accounts/server/methods.js';\n\nimport '../../api/coin-stats/server/methods.js';\n\nconsole.log(\"===== register api done =====\");\n","import bech32 from 'bech32'\nimport { HTTP } from 'meteor/http';\nimport * as cheerio from 'cheerio';\n\n// Load future from fibers\nvar Future = Npm.require(\"fibers/future\");\n// Load exec\nvar exec = Npm.require(\"child_process\").exec;\n\nfunction toHexString(byteArray) {\n    return byteArray.map(function(byte) {\n        return ('0' + (byte & 0xFF).toString(16)).slice(-2);\n    }).join('')\n}\n\nMeteor.methods({\n    pubkeyToBech32: function(pubkey, prefix) {\n        let pubkeyAminoPrefix = Buffer.from('1624DE6420', 'hex')\n        let buffer = Buffer.alloc(37)\n        pubkeyAminoPrefix.copy(buffer, 0)\n        Buffer.from(pubkey.value, 'base64').copy(buffer, pubkeyAminoPrefix.length)\n        return bech32.encode(prefix, bech32.toWords(buffer))\n    },\n    bech32ToPubkey: function(pubkey) {\n        let pubkeyAminoPrefix = Buffer.from('1624DE6420', 'hex')\n        let buffer = Buffer.from(bech32.fromWords(bech32.decode(pubkey).words));\n        return buffer.slice(pubkeyAminoPrefix.length).toString('base64');\n    },\n    getDelegator: function(operatorAddr){\n        let address = bech32.decode(operatorAddr);\n        return bech32.encode(Meteor.settings.public.bech32PrefixAccAddr, address.words);\n    },\n    getKeybaseTeamPic: function(keybaseUrl){\n        let teamPage = HTTP.get(keybaseUrl);\n        if (teamPage.statusCode == 200){\n            let page = cheerio.load(teamPage.content);\n            return page(\".kb-main-card img\").attr('src');\n        }\n    }\n})\n","import React from 'react';\nimport { UncontrolledTooltip } from 'reactstrap';\n\nexport const DenomSymbol = (props) => {\n    switch (props.denom) {\n        case \"dollar\":\n            return 'DOLLAR';\n        case \"mdap\":\n            return 'mDAP';\n        case \"steak\":\n            return '🥩';\n        default:\n            return '🍅';\n    }\n}\n\nexport const ProposalStatusIcon = (props) => {\n    switch (props.status) {\n        case 'Passed':\n            return <i className=\"fas fa-check-circle text-success\"></i>;\n        case 'Rejected':\n            return <i className=\"fas fa-times-circle text-danger\"></i>;\n        case 'Removed':\n            return <i className=\"fas fa-trash-alt text-dark\"></i>\n        case 'DepositPeriod':\n            return <i className=\"fas fa-battery-half text-warning\"></i>;\n        case 'VotingPeriod':\n            return <i className=\"fas fa-hand-paper text-info\"></i>;\n        default:\n            return <i></i>;\n    }\n}\n\nexport const VoteIcon = (props) => {\n    switch (props.vote) {\n        case 'yes':\n            return <i className=\"fas fa-check text-success\"></i>;\n        case 'no':\n            return <i className=\"fas fa-times text-danger\"></i>;\n        case 'abstain':\n            return <i className=\"fas fa-user-slash text-warning\"></i>;\n        case 'no_with_veto':\n            return <i className=\"fas fa-exclamation-triangle text-info\"></i>;\n        default:\n            return <i></i>;\n    }\n}\n\nexport const TxIcon = (props) => {\n    if (props.valid) {\n        return <span className=\"text-success text-nowrap\"><i className=\"fas fa-check-circle\"></i></span>;\n    }\n    else {\n        return <span className=\"text-danger text-nowrap\"><i className=\"fas fa-times-circle\"></i></span>;\n    }\n}\n\nexport class InfoIcon extends React.Component {\n    constructor (props) {\n        super (props);\n        this.ref = React.createRef ();\n    }\n\n    render () {\n        return [\n            <i key='icon' className='material-icons info-icon' ref={this.ref}>info</i>,\n            <UncontrolledTooltip key='tooltip' placement='right' target={this.ref}>\n                {this.props.children ? this.props.children : this.props.tooltipText}\n            </UncontrolledTooltip>\n        ]\n    }\n}\n","import { Meteor } from 'meteor/meteor';\nimport numbro from 'numbro';\n\nautoformat = (value) => {\n    let formatter = '0,0.0000';\n    value = Math.round (value * 1000) / 1000;\n    if (Math.round (value) === value)\n        formatter = '0,0'\n    else if (Math.round (value * 10) === value * 10)\n        formatter = '0,0.0'\n    else if (Math.round (value * 100) === value * 100)\n        formatter = '0,0.00'\n    else if (Math.round (value * 1000) === value * 1000)\n        formatter = '0,0.000'\n    return numbro (value).format (formatter)\n}\n\nconst coinList = Meteor.settings.public.coins;\nfor (let i in coinList) {\n    const coin = coinList[i];\n    if (!coin.displayNamePlural) {\n        coin.displayNamePlural = coin.displayName + 's';\n    }\n}\n\nconst digitalMoney = function (n, nom) {\n    const fraction = ['角', '分'];\n    const digit = [\n        '零', '壹', '贰', '叁', '肆',\n        '伍', '陆', '柒', '捌', '玖'\n    ];\n    const unit = [\n        ['元', '万', '亿'],\n        ['', '拾', '佰', '仟']\n    ];\n    const head = n < 0 ? '欠' : '';\n    n = Math.abs (n);\n    let s = '';\n    for (let i = 0; i < fraction.length; i++) {\n        s += (digit[Math.floor (n * 10 * Math.pow (10, i)) % 10] + fraction[i]).replace (/零./, '');\n    }\n    s = s || '整';\n    n = Math.floor (n);\n    for (let i = 0; i < unit[0].length && n > 0; i++) {\n        let p = '';\n        for (let j = 0; j < unit[1].length && n > 0; j++) {\n            p = digit[n % 10] + unit[1][j] + p;\n            n = Math.floor (n / 10);\n        }\n        s = p.replace (/(零.)*零$/, '').replace (/^$/, '零') + unit[0][i] + s;\n    }\n    return head + s.replace (/(零.)*零元/, '元')\n        .replace (/(零.)+/g, '零')\n        .replace (/^整$/, '零整');\n}\nconst digitalCoin = function (n, nom) {\n    const symbol = new String (nom).toUpperCase ();\n    const fraction = ['角', '分'];\n    const digit = [\n        '零', '壹', '贰', '叁', '肆',\n        '伍', '陆', '柒', '捌', '玖'\n    ];\n    const unit = [\n        [symbol, '万', '亿'],\n        ['', '拾', '佰', '仟']\n    ];\n    const head = n < 0 ? '负' : '';\n    n = Math.abs (n);\n    let s = '';\n    for (let i = 0; i < fraction.length; i++) {\n        s += (digit[Math.floor (n * 10 * Math.pow (10, i)) % 10] + fraction[i]).replace (/零./, '');\n    }\n    s = s || '整';\n    n = Math.floor (n);\n    for (let i = 0; i < unit[0].length && n > 0; i++) {\n        let p = '';\n        for (let j = 0; j < unit[1].length && n > 0; j++) {\n            p = digit[n % 10] + unit[1][j] + p;\n            n = Math.floor (n / 10);\n        }\n        s = p.replace (/(零.)*零$/, '').replace (/^$/, '零') + unit[0][i] + s;\n    }\n    return head +\n        s.replace (/(零.)*零元/, '')\n        .replace (/(零.)+/g, '零')\n        .replace (/^整$/, '零整');\n}\n\nexport default class Coin {\n    static StakingCoin = coinList.find (coin => coin.denom === Meteor.settings.public.bondDenom);\n    static MinStake = 1 / Number (Coin.StakingCoin.fraction);\n\n    constructor (amount, denom = Meteor.settings.public.bondDenom) {\n        const lowerDenom = denom.toLowerCase ();\n        this._coin = coinList.find (coin =>\n            coin.denom.toLowerCase () === lowerDenom || coin.displayName.toLowerCase () === lowerDenom\n        );\n\n        if (this._coin) {\n            if (lowerDenom === this._coin.denom.toLowerCase ()) {\n                this._amount = Number (amount);\n            } else if (lowerDenom === this._coin.displayName.toLowerCase ()) {\n                this._amount = Number (amount) * this._coin.fraction;\n            }\n        }\n        else {\n            this._coin = \"\";\n            this._amount = Number (amount);\n        }\n    }\n\n    get amount () {\n        return this._amount;\n    }\n\n    get stakingAmount () {\n        return (this._coin) ? this._amount / this._coin.fraction : this._amount;\n    }\n\n    toString (precision) {\n        // default to display in mint denom if it has more than 4 decimal places\n        let minStake = Coin.StakingCoin.fraction / (precision ? Math.pow (10, precision) : 10000)\n        if (this.amount < minStake) {\n            return `${numbro (this.amount).format ('0,0.0000')} ${this._coin.denom}`;\n        } else {\n            return `${precision ? numbro (this.stakingAmount).format ('0,0.' + '0'.repeat (precision)) : autoformat (this.stakingAmount)} ${this._coin.displayName}`\n        }\n    }\n\n    mintString (formatter) {\n        let amount = this.amount\n        if (formatter) {\n            amount = numbro (amount).format (formatter)\n        }\n\n        let denom = (this._coin == \"\") ? Coin.StakingCoin.displayName : this._coin.denom;\n        return `${amount} ${denom}`;\n    }\n\n    stakeString (formatter) {\n        let amount = this.stakingAmount\n        if (formatter) {\n            amount = numbro (amount).format (formatter)\n        }\n        return `${amount} ${Coin.StakingCoin.displayName}`;\n    }\n\n    toHanString () {\n        // default to display in mint denom if it has more than 4 decimal places\n        let minStake = Coin.StakingCoin.fraction / 1000\n        if (this.amount < minStake) {\n            return `${numbro (this.amount).format ('0,0.0000')} ${this._coin.denom}`;\n        } else {\n            return `${digitalCoin (this.stakingAmount, this._coin.displayName)}`\n        }\n    }\n}\n","const errors = {\n    \"sdk\" : {\n        1 : \"Internal Error\",\n        2 : \"Tx Decode Error\",\n        3 : \"Invalid Sequence Number\",\n        4 : \"Unauthorized\",\n        5 : \"Insufficient Funds\",\n        6 : \"Unknown Request\",\n        7 : \"Invalid Address\",\n        8 : \"Invalid PubKey\",\n        9 : \"Unknown Address\",\n        10 : \"Insufficient Coins\",\n        11 : \"Invalid Coins\",\n        12 : \"Out Of Gas\",\n        13 : \"Memo Too Large\",\n        14 : \"Insufficient Fee\",\n        15 : \"Too Many Signatures\",\n        16 : \"Gas Overflow\",\n        17 : \"No Signatures\"\n    },\n    \"staking\" : {\n        101 : \"Invalid Validator\",\n        102 : \"Invalid Delegation\",\n        103 : \"Invalid Input\",\n        104 : \"Validator Jailed\"\n    },\n    \"gov\" : {\n        1 : \"Unknown Proposal\",\n        2 : \"Inactive Proposal\",\n        3 : \"Already Active Proposal\",\n        4 : \"Already Finished Proposal\",\n        5 : \"Address Not Staked\",\n        6 : \"Invalid Title\",\n        7 : \"Invalid Description\",\n        8 : \"Invalid Proposal Type\",\n        9 : \"Invalid Vote\",\n        10 : \"Invalid Genesis\",\n        11 : \"Invalid Proposal Status\"\n    },\n    \"distr\" : {\n        103 : \"Invalid Input\",\n        104 : \"No Distribution Info\",\n        105 : \"No Validator Commission\",\n        106 : \"Set Withdraw Addrress Disabled\"\n    },\n    \"bank\" : {\n        101 : \"Send Disabled\",\n        102 : \"Invalid Inputs Outputs\"\n    },\n    \"slashing\" : {\n        101 : \"Invalid Validator\",\n        102 : \"Validator Jailed\",\n        103 : \"Validator Not Jailed\",\n        104 : \"Missing Self Delegation\",\n        105 : \"Self Delegation Too Low\"\n    }\n}\nimport numbro from 'numbro';\n\nexport default class ErrorCheck {\n    constructor (code, codespace, payload) {\n        this.code = code;\n        this.space = codespace;\n        this.message = \"Unknown error\";\n        this.payload = payload;\n        this.process ();\n    }\n\n    foundError () {\n        return errors.hasOwnProperty (this.space);\n    }\n\n    GetMessage () {\n        return this.message;\n    }\n\n    process () {\n        if (this.foundError ()) {\n            if (errors[this.space].hasOwnProperty (this.code)) {\n                this.message = errors[this.space][this.code];\n            }\n\n\n            if (this.space == \"sdk\" && this.code == 12) {\n                const { gas_used, gas_wanted } = this.payload;\n                this.message = this.message + \"gas uses (\" + numbro (gas_used).format (\"0,0\") + \") > gas wanted (\" + numbro (gas_wanted).format (\"0,0\") + \")\";\n\n            }\n        }\n\n\n    }\n}\n","// Server entry point, imports all server code\n\nimport '/imports/startup/server';\nimport '/imports/startup/both';\n// import moment from 'moment';\n// import '/imports/api/blocks/blocks.js';\n\nSYNCING = false;\nCOUNTMISSEDBLOCKS = false;\nCOUNTMISSEDBLOCKSSTATS = false;\nRPC = Meteor.settings.remote.rpc;\nLCD = Meteor.settings.remote.lcd;\ntimerBlocks = 0;\ntimerChain = 0;\ntimerConsensus = 0;\ntimerProposal = 0;\ntimerProposalsResults = 0;\ntimerMissedBlock = 0;\ntimerDelegation = 0;\ntimerAggregate = 0;\n\nconst DEFAULTSETTINGS = '/default_settings.json';\n\nupdateChainStatus = () => {\n    Meteor.call ('chain.updateStatus', (error, result) => {\n        if (error) {\n            console.log (\"updateStatus: \" + error);\n        } else {\n            console.log (\"updateStatus: \" + result);\n        }\n    })\n}\n\nupdateBlock = () => {\n    Meteor.call ('blocks.blocksUpdate', (error, result) => {\n        if (error) {\n            console.log (\"updateBlocks: \" + error);\n        } else {\n            console.log (\"updateBlocks: \" + result);\n        }\n    })\n}\n\ngetConsensusState = () => {\n    Meteor.call ('chain.getConsensusState', (error, result) => {\n        if (error) {\n            console.log (\"get consensus: \" + error)\n        }\n    })\n}\n\ngetProposals = () => {\n    Meteor.call ('proposals.getProposals', (error, result) => {\n        if (error) {\n            console.log (\"get proposal: \" + error);\n        }\n        if (result) {\n            console.log (\"get proposal: \" + result);\n        }\n    });\n}\n\ngetProposalsResults = () => {\n    Meteor.call ('proposals.getProposalResults', (error, result) => {\n        if (error) {\n            console.log (\"get proposals result: \" + error);\n        }\n        if (result) {\n            console.log (\"get proposals result: \" + result);\n        }\n    });\n}\n\nupdateMissedBlocks = () => {\n    Meteor.call ('ValidatorRecords.calculateMissedBlocks', (error, result) => {\n        if (error) {\n            console.log (\"missed blocks error: \" + error)\n        }\n        if (result) {\n            console.log (\"missed blocks ok:\" + result);\n        }\n    });\n    /*\n        Meteor.call('ValidatorRecords.calculateMissedBlocksStats', (error, result) =>{\n            if (error){\n                console.log(\"missed blocks stats error: \"+ error)\n            }\n            if (result){\n                console.log(\"missed blocks stats ok:\" + result);\n            }\n        });\n    */\n}\n\ngetDelegations = () => {\n    Meteor.call ('delegations.getDelegations', (error, result) => {\n        if (error) {\n            console.log (\"get delegations error: \" + error)\n        }\n        else {\n            console.log (\"get delegations ok: \" + result)\n        }\n    });\n}\n\naggregateMinutely = () => {\n    // doing something every min\n    Meteor.call ('Analytics.aggregateBlockTimeAndVotingPower', \"m\", (error, result) => {\n        if (error) {\n            console.log (\"aggregate minutely block time error: \" + error)\n        } else {\n            console.log (\"aggregate minutely block time ok: \" + result)\n        }\n    });\n\n    Meteor.call ('coinStats.getCoinStats', (error, result) => {\n        if (error) {\n            console.log (\"get coin stats error: \" + error);\n        } else {\n            console.log (\"get coin stats ok: \" + result)\n        }\n    });\n}\n\naggregateHourly = () => {\n    // doing something every hour\n    Meteor.call ('Analytics.aggregateBlockTimeAndVotingPower', \"h\", (error, result) => {\n        if (error) {\n            console.log (\"aggregate hourly block time error: \" + error)\n        }\n        else {\n            console.log (\"aggregate hourly block time ok: \" + result)\n        }\n    });\n}\n\naggregateDaily = () => {\n    // doing somthing every day\n    Meteor.call ('Analytics.aggregateBlockTimeAndVotingPower', \"d\", (error, result) => {\n        if (error) {\n            console.log (\"aggregate daily block time error: \" + error)\n        }\n        else {\n            console.log (\"aggregate daily block time ok: \" + result)\n        }\n    });\n\n    Meteor.call ('Analytics.aggregateValidatorDailyBlockTime', (error, result) => {\n        if (error) {\n            console.log (\"aggregate validators block time error:\" + error)\n        }\n        else {\n            console.log (\"aggregate validators block time ok:\" + result);\n        }\n    })\n}\n\n\nMeteor.startup (function () {\n    if (Meteor.isDevelopment) {\n        process.env.NODE_TLS_REJECT_UNAUTHORIZED = 0;\n        import DEFAULTSETTINGSJSON from '../default_settings.json'\n        Object.keys (DEFAULTSETTINGSJSON).forEach ((key) => {\n            if (Meteor.settings[key] == undefined) {\n                console.warn (`CHECK SETTINGS JSON: ${key} is missing from settings`)\n                Meteor.settings[key] = {};\n            }\n            Object.keys (DEFAULTSETTINGSJSON[key]).forEach ((param) => {\n                if (Meteor.settings[key][param] == undefined) {\n                    console.warn (`CHECK SETTINGS JSON: ${key}.${param} is missing from settings`)\n                    Meteor.settings[key][param] = DEFAULTSETTINGSJSON[key][param]\n                }\n            })\n        })\n    }\n\n    Meteor.call ('chain.genesis', (err, result) => {\n        if (err) {\n            console.log (err);\n        }\n        if (result) {\n            if (Meteor.settings.debug.startTimer) {\n                timerConsensus = Meteor.setInterval (function () {\n                    getConsensusState ();\n                }, Meteor.settings.params.consensusInterval);\n\n                timerBlocks = Meteor.setInterval (function () {\n                    updateBlock ();\n                }, Meteor.settings.params.blockInterval);\n\n                timerChain = Meteor.setInterval (function () {\n                    updateChainStatus ();\n                }, Meteor.settings.params.statusInterval);\n\n                if (Meteor.settings.params.proposalInterval >= 0) {\n                    timerProposal = Meteor.setInterval (function () {\n                        getProposals ();\n                    }, Meteor.settings.params.proposalInterval);\n\n                    timerProposalsResults = Meteor.setInterval (function () {\n                        getProposalsResults ();\n                    }, Meteor.settings.params.proposalInterval);\n                }\n\n                timerMissedBlock = Meteor.setInterval (function () {\n                    updateMissedBlocks ();\n                }, Meteor.settings.params.missedBlocksInterval);\n\n                timerDelegation = Meteor.setInterval (function () {\n                    getDelegations ();\n                }, Meteor.settings.params.delegationInterval);\n\n                timerAggregate = Meteor.setInterval (function () {\n                    let now = new Date ();\n                    if ((now.getUTCSeconds () == 0)) {\n                        aggregateMinutely ();\n                    }\n\n                    if ((now.getUTCMinutes () == 0) && (now.getUTCSeconds () == 0)) {\n                        aggregateHourly ();\n                    }\n\n                    if ((now.getUTCHours () == 0) && (now.getUTCMinutes () == 0) && (now.getUTCSeconds () == 0)) {\n                        aggregateDaily ();\n                    }\n                }, 1000)\n            }\n        }\n    })\n\n});\n"]}